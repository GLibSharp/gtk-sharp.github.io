fragment_downloaded_cb({"url": "gtktreesortable.html#GtkTreeIterCompareFunc", "fragment": "Gtk.TreeIterCompareFunc \nGtkTreeIterCompareFunc \nGtk.TreeIterCompareFunc \nA GtkTreeIterCompareFunc should return a negative integer zero or a positive integer if a sorts before b a sorts with b or a sorts after b respectively. If two iters compare as equal their order in the sorted model is undefined. In order to ensure that the Gtk.TreeSortable behaves as expected the GtkTreeIterCompareFunc must define a partial order on the model i.e. it must be reflexive antisymmetric and transitive. \nFor example if model is a product catalogue then a compare function for the price column could be one which returns price_of a price_of b \nParameters \nThe Gtk.TreeModel the comparison is within \nA Gtk.TreeIter in model \nAnother Gtk.TreeIter in model \nData passed when the compare func is assigned e.g. by Gtk.TreeSortable.set_sort_func \na negative integer zero or a positive integer depending on whether a sorts before with or after b \nA GtkTreeIterCompareFunc should return a negative integer zero or a positive integer if a sorts before b a sorts with b or a sorts after b respectively. If two iters compare as equal their order in the sorted model is undefined. In order to ensure that the GtkTreeSortable behaves as expected the GtkTreeIterCompareFunc must define a partial order on the model i.e. it must be reflexive antisymmetric and transitive. \nFor example if model is a product catalogue then a compare function for the price column could be one which returns price_of a price_of b \nParameters \nThe GtkTreeModel the comparison is within \nA GtkTreeIter in model \nAnother GtkTreeIter in model \nData passed when the compare func is assigned e.g. by gtk_tree_sortable_set_sort_func \na negative integer zero or a positive integer depending on whether a sorts before with or after b \nA GtkTreeIterCompareFunc should return a negative integer zero or a positive integer if a sorts before b a sorts with b or a sorts after b respectively. If two iters compare as equal their order in the sorted model is undefined. In order to ensure that the Gtk.TreeSortable behaves as expected the GtkTreeIterCompareFunc must define a partial order on the model i.e. it must be reflexive antisymmetric and transitive. \nFor example if model is a product catalogue then a compare function for the price column could be one which returns price_of a price_of b \nParameters \nThe Gtk.TreeModel the comparison is within \nA Gtk.TreeIter in model \nAnother Gtk.TreeIter in model \nData passed when the compare func is assigned e.g. by Gtk.prototype.set_sort_func \na negative integer zero or a positive integer depending on whether a sorts before with or after b \n"});