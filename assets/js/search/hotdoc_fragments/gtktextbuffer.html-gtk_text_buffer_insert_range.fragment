fragment_downloaded_cb({"url": "gtktextbuffer.html#gtk_text_buffer_insert_range", "fragment": "gtk_text_buffer_insert_range \nGtk.TextBuffer.insert_range \nGtk.prototype.insert_range \nCopies text tags and pixbufs between start and end the order of start and end doesn t matter and inserts the copy at iter. Used instead of simply getting inserting text because it preserves images and tags. If start and end are in a different buffer from buffer the two buffers must share the same tag table. \nImplemented via emissions of the insert_text and apply_tag signals so expect those. \nParameters \na GtkTextBuffer \na position in buffer \na position in a GtkTextBuffer \nanother position in the same buffer as start \nCopies text tags and pixbufs between start and end the order of start and end doesn t matter and inserts the copy at iter. Used instead of simply getting inserting text because it preserves images and tags. If start and end are in a different buffer from buffer the two buffers must share the same tag table. \nImplemented via emissions of the insert_text and apply_tag signals so expect those. \nParameters \na Gtk.TextBuffer \na position in buffer \na position in a Gtk.TextBuffer \nanother position in the same buffer as start \nCopies text tags and pixbufs between start and end the order of start and end doesn t matter and inserts the copy at iter. Used instead of simply getting inserting text because it preserves images and tags. If start and end are in a different buffer from buffer the two buffers must share the same tag table. \nImplemented via emissions of the insert_text and apply_tag signals so expect those. \nParameters \na Gtk.TextBuffer \na position in buffer \na position in a Gtk.TextBuffer \nanother position in the same buffer as start \n"});