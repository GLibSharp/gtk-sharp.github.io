fragment_downloaded_cb({"url": "gtkwidget.html#gtk_widget_get_ancestor", "fragment": "gtk_widget_get_ancestor \nGtk.Widget.get_ancestor \nGtk.prototype.get_ancestor \nGets the first ancestor of widget with type widget_type. For example gtk_widget_get_ancestor widget GTK_TYPE_BOX gets the first GtkBox that s an ancestor of widget. No reference will be added to the returned widget it should not be unreferenced. See note about checking for a toplevel GtkWindow in the docs for gtk_widget_get_toplevel. \nNote that unlike gtk_widget_is_ancestor gtk_widget_get_ancestor considers widget to be an ancestor of itself. \nParameters \na GtkWidget \nancestor type \nthe ancestor widget or NULL if not found \nGets the first ancestor of widget with type widget_type. For example gtk_widget_get_ancestor widget GTK_TYPE_BOX gets the first Gtk.Box that s an ancestor of widget. No reference will be added to the returned widget it should not be unreferenced. See note about checking for a toplevel Gtk.Window in the docs for Gtk.Widget.get_toplevel. \nNote that unlike Gtk.Widget.is_ancestor Gtk.Widget.get_ancestor considers widget to be an ancestor of itself. \nParameters \na Gtk.Widget \nancestor type \nthe ancestor widget or None if not found \nGets the first ancestor of widget with type widget_type. For example gtk_widget_get_ancestor widget GTK_TYPE_BOX gets the first Gtk.Box that s an ancestor of widget. No reference will be added to the returned widget it should not be unreferenced. See note about checking for a toplevel Gtk.Window in the docs for Gtk.prototype.get_toplevel. \nNote that unlike Gtk.prototype.is_ancestor Gtk.prototype.get_ancestor considers widget to be an ancestor of itself. \nParameters \na Gtk.Widget \nancestor type \nthe ancestor widget or null if not found \n"});