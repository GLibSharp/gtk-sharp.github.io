fragment_downloaded_cb({"url": "gtkicontheme.html#gtk_icon_theme_lookup_icon_for_scale", "fragment": "Gtk.IconTheme.lookup_icon_for_scale \ngtk_icon_theme_lookup_icon_for_scale \nGtk.prototype.lookup_icon_for_scale \nLooks up a named icon for a particular window scale and returns a Gtk.IconInfo containing information such as the filename of the icon. The icon can then be rendered into a pixbuf using Gtk.IconInfo.load_icon. Gtk.IconTheme.load_icon combines these two steps if all you need is the pixbuf. \nParameters \na Gtk.IconTheme \nthe name of the icon to lookup \ndesired icon size \nthe desired scale \nflags modifying the behavior of the icon lookup \na Gtk.IconInfo object containing information about the icon or None if the icon wasn t found. \nSince \nLooks up a named icon for a particular window scale and returns a GtkIconInfo containing information such as the filename of the icon. The icon can then be rendered into a pixbuf using gtk_icon_info_load_icon. gtk_icon_theme_load_icon combines these two steps if all you need is the pixbuf. \nParameters \na GtkIconTheme \nthe name of the icon to lookup \ndesired icon size \nthe desired scale \nflags modifying the behavior of the icon lookup \na GtkIconInfo object containing information about the icon or NULL if the icon wasn t found. \nSince \nLooks up a named icon for a particular window scale and returns a Gtk.IconInfo containing information such as the filename of the icon. The icon can then be rendered into a pixbuf using Gtk.prototype.load_icon. Gtk.prototype.load_icon combines these two steps if all you need is the pixbuf. \nParameters \na Gtk.IconTheme \nthe name of the icon to lookup \ndesired icon size \nthe desired scale \nflags modifying the behavior of the icon lookup \na Gtk.IconInfo object containing information about the icon or null if the icon wasn t found. \nSince \n"});