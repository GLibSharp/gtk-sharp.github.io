fragment_downloaded_cb({"url": "gtkicontheme-h.html#gtk_icon_info_load_symbolic_for_context_finish", "fragment": "gtk_icon_info_load_symbolic_for_context_finish \nGtk.prototype.load_symbolic_for_context_finish \nGtk.IconInfo.load_symbolic_for_context_finish \nFinishes an async icon load see gtk_icon_info_load_symbolic_for_context_async. \nParameters \na GtkIconInfo from gtk_icon_theme_lookup_icon \na GAsyncResult \na gboolean returns whether the loaded icon was a symbolic one and whether the fg color was applied to it. \nthe rendered icon this may be a newly created icon or a new reference to an internal icon so you must not modify the icon. Use g_object_unref to release your reference to the icon. \nSince \nFinishes an async icon load see Gtk.prototype.load_symbolic_for_context_async. \nParameters \na Gtk.IconInfo from Gtk.prototype.lookup_icon \na Gio.AsyncResult \nReturns a tuple made of \nthe rendered icon this may be a newly created icon or a new reference to an internal icon so you must not modify the icon. Use GObject.prototype.unref to release your reference to the icon. \nthe rendered icon this may be a newly created icon or a new reference to an internal icon so you must not modify the icon. Use GObject.prototype.unref to release your reference to the icon. \nSince \nFinishes an async icon load see Gtk.IconInfo.load_symbolic_for_context_async. \nParameters \na Gtk.IconInfo from Gtk.IconTheme.lookup_icon \na Gio.AsyncResult \nReturns a tuple made of \nthe rendered icon this may be a newly created icon or a new reference to an internal icon so you must not modify the icon. Use GObject.Object.unref to release your reference to the icon. \nthe rendered icon this may be a newly created icon or a new reference to an internal icon so you must not modify the icon. Use GObject.Object.unref to release your reference to the icon. \nSince \n"});