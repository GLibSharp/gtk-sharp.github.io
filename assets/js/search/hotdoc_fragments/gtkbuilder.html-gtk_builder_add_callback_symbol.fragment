fragment_downloaded_cb({"url": "gtkbuilder.html#gtk_builder_add_callback_symbol", "fragment": "gtk_builder_add_callback_symbol \nGtk.Builder.add_callback_symbol \nGtk.prototype.add_callback_symbol \nAdds the callback_symbol to the scope of builder under the given callback_name. \nUsing this function overrides the behavior of gtk_builder_connect_signals for any callback symbols that are added. Using this method allows for better encapsulation as it does not require that callback symbols be declared in the global namespace. \nParameters \na GtkBuilder \nThe name of the callback as expected in the XML \nThe callback pointer \nSince \nAdds the callback_symbol to the scope of builder under the given callback_name. \nUsing this function overrides the behavior of Gtk.Builder.connect_signals for any callback symbols that are added. Using this method allows for better encapsulation as it does not require that callback symbols be declared in the global namespace. \nParameters \na Gtk.Builder \nThe name of the callback as expected in the XML \nThe callback pointer \nSince \nAdds the callback_symbol to the scope of builder under the given callback_name. \nUsing this function overrides the behavior of Gtk.prototype.connect_signals for any callback symbols that are added. Using this method allows for better encapsulation as it does not require that callback symbols be declared in the global namespace. \nParameters \na Gtk.Builder \nThe name of the callback as expected in the XML \nThe callback pointer \nSince \n"});