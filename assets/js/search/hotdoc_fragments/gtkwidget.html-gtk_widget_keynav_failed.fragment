fragment_downloaded_cb({"url": "gtkwidget.html#gtk_widget_keynav_failed", "fragment": "gtk_widget_keynav_failed \nGtk.prototype.keynav_failed \nGtk.Widget.keynav_failed \nThis function should be called whenever keyboard navigation within a single widget hits a boundary. The function emits the keynav failed signal on the widget and its return value should be interpreted in a way similar to the return value of gtk_widget_child_focus \nWhen TRUE is returned stay in the widget the failed keyboard navigation is OK and or there is nowhere we can should move the focus to. \nWhen FALSE is returned the caller should continue with keyboard navigation outside the widget e.g. by calling gtk_widget_child_focus on the widget s toplevel. \nThe default keynav failed handler returns TRUE for GTK_DIR_TAB_FORWARD and GTK_DIR_TAB_BACKWARD. For the other values of GtkDirectionType it returns FALSE. \nWhenever the default handler returns TRUE it also calls gtk_widget_error_bell to notify the user of the failed keyboard navigation. \nA use case for providing an own implementation of keynav failed either by connecting to it or by overriding it would be a row of GtkEntry widgets where the user should be able to navigate the entire row with the cursor keys as e.g. known from user interfaces that require entering license keys. \nParameters \na GtkWidget \ndirection of focus movement \nTRUE if stopping keyboard navigation is fine FALSE if the emitting widget should try to handle the keyboard navigation attempt in its parent container s \nSince \nThis function should be called whenever keyboard navigation within a single widget hits a boundary. The function emits the keynav failed signal on the widget and its return value should be interpreted in a way similar to the return value of Gtk.prototype.child_focus \nWhen true is returned stay in the widget the failed keyboard navigation is OK and or there is nowhere we can should move the focus to. \nWhen false is returned the caller should continue with keyboard navigation outside the widget e.g. by calling Gtk.prototype.child_focus on the widget s toplevel. \nThe default keynav failed handler returns true for Gtk.DirectionType.TAB_FORWARD and Gtk.DirectionType.TAB_BACKWARD. For the other values of Gtk.DirectionType it returns false. \nWhenever the default handler returns true it also calls Gtk.prototype.error_bell to notify the user of the failed keyboard navigation. \nA use case for providing an own implementation of keynav failed either by connecting to it or by overriding it would be a row of Gtk.Entry widgets where the user should be able to navigate the entire row with the cursor keys as e.g. known from user interfaces that require entering license keys. \nParameters \na Gtk.Widget \ndirection of focus movement \ntrue if stopping keyboard navigation is fine false if the emitting widget should try to handle the keyboard navigation attempt in its parent container s \nSince \nThis function should be called whenever keyboard navigation within a single widget hits a boundary. The function emits the keynav failed signal on the widget and its return value should be interpreted in a way similar to the return value of Gtk.Widget.child_focus \nWhen True is returned stay in the widget the failed keyboard navigation is OK and or there is nowhere we can should move the focus to. \nWhen False is returned the caller should continue with keyboard navigation outside the widget e.g. by calling Gtk.Widget.child_focus on the widget s toplevel. \nThe default keynav failed handler returns True for Gtk.DirectionType.TAB_FORWARD and Gtk.DirectionType.TAB_BACKWARD. For the other values of Gtk.DirectionType it returns False. \nWhenever the default handler returns True it also calls Gtk.Widget.error_bell to notify the user of the failed keyboard navigation. \nA use case for providing an own implementation of keynav failed either by connecting to it or by overriding it would be a row of Gtk.Entry widgets where the user should be able to navigate the entire row with the cursor keys as e.g. known from user interfaces that require entering license keys. \nParameters \na Gtk.Widget \ndirection of focus movement \nTrue if stopping keyboard navigation is fine False if the emitting widget should try to handle the keyboard navigation attempt in its parent container s \nSince \n"});