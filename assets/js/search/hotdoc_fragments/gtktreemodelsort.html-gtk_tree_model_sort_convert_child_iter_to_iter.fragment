fragment_downloaded_cb({"url": "gtktreemodelsort.html#gtk_tree_model_sort_convert_child_iter_to_iter", "fragment": "gtk_tree_model_sort_convert_child_iter_to_iter \nGtk.TreeModelSort.convert_child_iter_to_iter \nGtk.prototype.convert_child_iter_to_iter \nSets sort_iter to point to the row in tree_model_sort that corresponds to the row pointed at by child_iter. If sort_iter was not set FALSE is returned. Note a boolean is only returned since \nParameters \nA GtkTreeModelSort \nAn uninitialized GtkTreeIter. \nA valid GtkTreeIter pointing to a row on the child model \nTRUE if sort_iter was set i.e. if sort_iter is a valid iterator pointer to a visible row in the child model. \nSets sort_iter to point to the row in tree_model_sort that corresponds to the row pointed at by child_iter. If sort_iter was not set False is returned. Note a boolean is only returned since \nParameters \nA Gtk.TreeModelSort \nA valid Gtk.TreeIter pointing to a row on the child model \nReturns a tuple made of \nTrue if sort_iter was set i.e. if sort_iter is a valid iterator pointer to a visible row in the child model. \nTrue if sort_iter was set i.e. if sort_iter is a valid iterator pointer to a visible row in the child model. \nSets sort_iter to point to the row in tree_model_sort that corresponds to the row pointed at by child_iter. If sort_iter was not set false is returned. Note a boolean is only returned since \nParameters \nA Gtk.TreeModelSort \nA valid Gtk.TreeIter pointing to a row on the child model \nReturns a tuple made of \ntrue if sort_iter was set i.e. if sort_iter is a valid iterator pointer to a visible row in the child model. \ntrue if sort_iter was set i.e. if sort_iter is a valid iterator pointer to a visible row in the child model. \n"});