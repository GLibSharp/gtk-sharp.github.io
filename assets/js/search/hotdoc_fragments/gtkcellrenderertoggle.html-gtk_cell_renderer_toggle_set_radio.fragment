fragment_downloaded_cb({"url": "gtkcellrenderertoggle.html#gtk_cell_renderer_toggle_set_radio", "fragment": "Gtk.CellRendererToggle.set_radio \ngtk_cell_renderer_toggle_set_radio \nGtk.prototype.set_radio \nIf radio is True the cell renderer renders a radio toggle i.e. a toggle in a group of mutually exclusive toggles If False it renders a check toggle a standalone boolean option This can be set globally for the cell renderer or changed just before rendering each cell in the model for Gtk.TreeView you set up a per row setting using Gtk.TreeViewColumn to associate model columns with cell renderer properties \nParameters \na Gtk.CellRendererToggle \nTrue to make the toggle look like a radio button \nIf radio is TRUE the cell renderer renders a radio toggle i.e. a toggle in a group of mutually exclusive toggles If FALSE it renders a check toggle a standalone boolean option This can be set globally for the cell renderer or changed just before rendering each cell in the model for GtkTreeView you set up a per row setting using GtkTreeViewColumn to associate model columns with cell renderer properties \nParameters \na GtkCellRendererToggle \nTRUE to make the toggle look like a radio button \nIf radio is true the cell renderer renders a radio toggle i.e. a toggle in a group of mutually exclusive toggles If false it renders a check toggle a standalone boolean option This can be set globally for the cell renderer or changed just before rendering each cell in the model for Gtk.TreeView you set up a per row setting using Gtk.TreeViewColumn to associate model columns with cell renderer properties \nParameters \na Gtk.CellRendererToggle \ntrue to make the toggle look like a radio button \n"});