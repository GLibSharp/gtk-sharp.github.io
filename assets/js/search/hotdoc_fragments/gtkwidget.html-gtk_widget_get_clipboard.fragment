fragment_downloaded_cb({"url": "gtkwidget.html#gtk_widget_get_clipboard", "fragment": "gtk_widget_get_clipboard \nGtk.Widget.get_clipboard \nGtk.prototype.get_clipboard \nReturns the clipboard object for the given selection to be used with widget. widget must have a GdkDisplay associated with it so must be attached to a toplevel window. \nParameters \na GtkWidget \na GdkAtom which identifies the clipboard to use. GDK_SELECTION_CLIPBOARD gives the default clipboard. Another common value is GDK_SELECTION_PRIMARY which gives the primary X selection. \nthe appropriate clipboard object. If no clipboard already exists a new one will be created. Once a clipboard object has been created it is persistent for all time. \nSince \nReturns the clipboard object for the given selection to be used with widget. widget must have a Gdk.Display associated with it so must be attached to a toplevel window. \nParameters \na Gtk.Widget \na Gdk.Atom which identifies the clipboard to use. GDK_SELECTION_CLIPBOARD not introspectable gives the default clipboard. Another common value is GDK_SELECTION_PRIMARY not introspectable which gives the primary X selection. \nthe appropriate clipboard object. If no clipboard already exists a new one will be created. Once a clipboard object has been created it is persistent for all time. \nSince \nReturns the clipboard object for the given selection to be used with widget. widget must have a Gdk.Display associated with it so must be attached to a toplevel window. \nParameters \na Gtk.Widget \na Gdk.Atom which identifies the clipboard to use. GDK_SELECTION_CLIPBOARD not introspectable gives the default clipboard. Another common value is GDK_SELECTION_PRIMARY not introspectable which gives the primary X selection. \nthe appropriate clipboard object. If no clipboard already exists a new one will be created. Once a clipboard object has been created it is persistent for all time. \nSince \n"});