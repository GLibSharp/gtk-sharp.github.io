fragment_downloaded_cb({"url": "gtkactionable.html#gtk_actionable_set_action_name", "fragment": "gtk_actionable_set_action_name \nGtk.prototype.set_action_name \nGtk.Actionable.set_action_name \nSpecifies the name of the action with which this widget should be associated. If action_name is NULL then the widget will be unassociated from any previous action. \nUsually this function is used when the widget is located or will be located within the hierarchy of a GtkApplicationWindow. \nNames are of the form win.save or app.quit for actions on the containing GtkApplicationWindow or its associated GtkApplication respectively. This is the same form used for actions in the GMenu associated with the window. \nParameters \na GtkActionable widget \nan action name or NULL \nSince \nSpecifies the name of the action with which this widget should be associated. If action_name is null then the widget will be unassociated from any previous action. \nUsually this function is used when the widget is located or will be located within the hierarchy of a Gtk.ApplicationWindow. \nNames are of the form win.save or app.quit for actions on the containing Gtk.ApplicationWindow or its associated Gtk.Application respectively. This is the same form used for actions in the Gio.Menu associated with the window. \nParameters \na Gtk.Actionable widget \nan action name or null \nSince \nSpecifies the name of the action with which this widget should be associated. If action_name is None then the widget will be unassociated from any previous action. \nUsually this function is used when the widget is located or will be located within the hierarchy of a Gtk.ApplicationWindow. \nNames are of the form win.save or app.quit for actions on the containing Gtk.ApplicationWindow or its associated Gtk.Application respectively. This is the same form used for actions in the Gio.Menu associated with the window. \nParameters \na Gtk.Actionable widget \nan action name or None \nSince \n"});