fragment_downloaded_cb({"url": "gtkcontainer.html#gtk_container_remove", "fragment": "gtk_container_remove \nGtk.Container.remove \nGtk.prototype.remove \nRemoves widget from container. widget must be inside container. Note that container will own a reference to widget and that this may be the last reference held so removing a widget from its container can destroy that widget. If you want to use widget again you need to add a reference to it before removing it from a container using g_object_ref. If you don t want to use widget again it s usually more efficient to simply destroy it directly using gtk_widget_destroy since this will remove it from the container and help break any circular reference count cycles. \nParameters \na GtkContainer \na current child of container \nRemoves widget from container. widget must be inside container. Note that container will own a reference to widget and that this may be the last reference held so removing a widget from its container can destroy that widget. If you want to use widget again you need to add a reference to it before removing it from a container using GObject.Object.ref. If you don t want to use widget again it s usually more efficient to simply destroy it directly using Gtk.Widget.destroy since this will remove it from the container and help break any circular reference count cycles. \nParameters \na Gtk.Container \na current child of container \nRemoves widget from container. widget must be inside container. Note that container will own a reference to widget and that this may be the last reference held so removing a widget from its container can destroy that widget. If you want to use widget again you need to add a reference to it before removing it from a container using GObject.prototype.ref. If you don t want to use widget again it s usually more efficient to simply destroy it directly using Gtk.prototype.destroy since this will remove it from the container and help break any circular reference count cycles. \nParameters \na Gtk.Container \na current child of container \n"});