fragment_downloaded_cb({"url": "gtkdialog.html#page-description", "fragment": "Dialog boxes are a convenient way to prompt the user for a small amount of input e.g. to display a message ask a question or anything else that does not require extensive effort on the user s part. \nGTK treats a dialog as a window split vertically. The top section is a GtkVBox and is where widgets such as a GtkLabel or a GtkEntry should be packed. The bottom area is known as the action area This is generally used for packing buttons into the dialog which may perform functions such as cancel ok or apply. \nGtkDialog boxes are created with a call to gtk_dialog_new or gtk_dialog_new_with_buttons. gtk_dialog_new_with_buttons is recommended it allows you to set the dialog title some convenient flags and add simple buttons. \nA modal dialog that is one which freezes the rest of the application from user input can be created by calling gtk_window_set_modal on the dialog. Use the GTK_WINDOW macro to cast the widget returned from gtk_dialog_new into a GtkWindow. When using gtk_dialog_new_with_buttons you can also pass the GTK_DIALOG_MODAL flag to make a dialog modal. \nIf you add buttons to GtkDialog using gtk_dialog_new_with_buttons gtk_dialog_add_button gtk_dialog_add_buttons or gtk_dialog_add_action_widget clicking the button will emit a signal called response with a response ID that you specified. GTK will never assign a meaning to positive response IDs these are entirely user defined. But for convenience you can use the response IDs in the GtkResponseType enumeration these all have values less than zero If a dialog receives a delete event the response signal will be emitted with a response ID of GTK_RESPONSE_DELETE_EVENT. \nIf you want to block waiting for a dialog to return before returning control flow to your code you can call gtk_dialog_run. This function enters a recursive main loop and waits for the user to respond to the dialog returning the response ID corresponding to the button the user clicked. \nFor the simple dialog in the following example in reality you d probably use GtkMessageDialog to save yourself some effort. But you d need to create the dialog contents manually if you had more than a simple message in the dialog. \nAn example for simple GtkDialog usage \nThe GtkDialog implementation of the GtkBuildable interface exposes the vbox and action_area as internal children with the names vbox and action_area \nGtkDialog supports a custom element which can contain multiple elements. The response attribute specifies a numeric response and the content of the element is the id of widget which should be a child of the dialogs action_area To mark a response as default set the default attribute of the element to true. \nGtkDialog supports adding action widgets by specifying action as the type attribute of a element. The widget will be added either to the action area or the headerbar of the dialog depending on the use header bar property. The response id has to be associated with the action widget using the element. \nAn example of a GtkDialog UI definition fragment \n"});