fragment_downloaded_cb({"url": "gtkcellarea.html#gtk_cell_area_get_preferred_width", "fragment": "gtk_cell_area_get_preferred_width \nGtk.CellArea.get_preferred_width \nGtk.prototype.get_preferred_width \nRetrieves a cell area s initial minimum and natural width. \narea will store some geometrical information in context along the way when requesting sizes over an arbitrary number of rows it s not important to check the minimum_width and natural_width of this call but rather to consult gtk_cell_area_context_get_preferred_width after a series of requests. \nParameters \na GtkCellArea \nthe GtkCellAreaContext to perform this request with \nthe GtkWidget where area will be rendering \nlocation to store the minimum width or NULL \nlocation to store the natural width or NULL \nSince \nRetrieves a cell area s initial minimum and natural width. \narea will store some geometrical information in context along the way when requesting sizes over an arbitrary number of rows it s not important to check the minimum_width and natural_width of this call but rather to consult Gtk.CellAreaContext.get_preferred_width after a series of requests. \nParameters \na Gtk.CellArea \nthe Gtk.CellAreaContext to perform this request with \nthe Gtk.Widget where area will be rendering \nSince \nRetrieves a cell area s initial minimum and natural width. \narea will store some geometrical information in context along the way when requesting sizes over an arbitrary number of rows it s not important to check the minimum_width and natural_width of this call but rather to consult Gtk.prototype.get_preferred_width after a series of requests. \nParameters \na Gtk.CellArea \nthe Gtk.CellAreaContext to perform this request with \nthe Gtk.Widget where area will be rendering \nSince \n"});