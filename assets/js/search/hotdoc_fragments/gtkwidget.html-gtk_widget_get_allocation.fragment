fragment_downloaded_cb({"url": "gtkwidget.html#gtk_widget_get_allocation", "fragment": "Gtk.Widget.get_allocation \ngtk_widget_get_allocation \nGtk.prototype.get_allocation \nRetrieves the widget s allocation. \nNote when implementing a Gtk.Container a widget s allocation will be its adjusted allocation that is the widget s parent container typically calls Gtk.Widget.size_allocate with an allocation and that allocation is then adjusted to handle margin and alignment for example before assignment to the widget. Gtk.Widget.get_allocation returns the adjusted allocation that was actually assigned to the widget. The adjusted allocation is guaranteed to be completely contained within the Gtk.Widget.size_allocate allocation however. So a Gtk.Container is guaranteed that its children stay inside the assigned bounds but not that they have exactly the bounds the container assigned. There is no way to get the original allocation assigned by Gtk.Widget.size_allocate since it isn t stored if a container implementation needs that information it will have to track it itself. \nParameters \na Gtk.Widget \nSince \nRetrieves the widget s allocation. \nNote when implementing a GtkContainer a widget s allocation will be its adjusted allocation that is the widget s parent container typically calls gtk_widget_size_allocate with an allocation and that allocation is then adjusted to handle margin and alignment for example before assignment to the widget. gtk_widget_get_allocation returns the adjusted allocation that was actually assigned to the widget. The adjusted allocation is guaranteed to be completely contained within the gtk_widget_size_allocate allocation however. So a GtkContainer is guaranteed that its children stay inside the assigned bounds but not that they have exactly the bounds the container assigned. There is no way to get the original allocation assigned by gtk_widget_size_allocate since it isn t stored if a container implementation needs that information it will have to track it itself. \nParameters \na GtkWidget \na pointer to a GtkAllocation to copy to \nSince \nRetrieves the widget s allocation. \nNote when implementing a Gtk.Container a widget s allocation will be its adjusted allocation that is the widget s parent container typically calls Gtk.prototype.size_allocate with an allocation and that allocation is then adjusted to handle margin and alignment for example before assignment to the widget. Gtk.prototype.get_allocation returns the adjusted allocation that was actually assigned to the widget. The adjusted allocation is guaranteed to be completely contained within the Gtk.prototype.size_allocate allocation however. So a Gtk.Container is guaranteed that its children stay inside the assigned bounds but not that they have exactly the bounds the container assigned. There is no way to get the original allocation assigned by Gtk.prototype.size_allocate since it isn t stored if a container implementation needs that information it will have to track it itself. \nParameters \na Gtk.Widget \nSince \n"});