fragment_downloaded_cb({"url": "gtktreeview.html#gtk_tree_view_set_reorderable", "fragment": "Gtk.TreeView.set_reorderable \ngtk_tree_view_set_reorderable \nGtk.prototype.set_reorderable \nThis function is a convenience function to allow you to reorder models that support the Gtk.TreeDragSourceIface and the Gtk.TreeDragDestIface. Both Gtk.TreeStore and Gtk.ListStore support these. If reorderable is True then the user can reorder the model by dragging and dropping rows. The developer can listen to these changes by connecting to the model s row inserted and row deleted signals. The reordering is implemented by setting up the tree view as a drag source and destination. Therefore drag and drop can not be used in a reorderable view for any other purpose. \nThis function does not give you any degree of control over the order any reordering is allowed. If more control is needed you should probably handle drag and drop manually. \nParameters \nA Gtk.TreeView. \nTrue if the tree can be reordered. \nThis function is a convenience function to allow you to reorder models that support the GtkTreeDragSourceIface and the GtkTreeDragDestIface. Both GtkTreeStore and GtkListStore support these. If reorderable is TRUE then the user can reorder the model by dragging and dropping rows. The developer can listen to these changes by connecting to the model s row inserted and row deleted signals. The reordering is implemented by setting up the tree view as a drag source and destination. Therefore drag and drop can not be used in a reorderable view for any other purpose. \nThis function does not give you any degree of control over the order any reordering is allowed. If more control is needed you should probably handle drag and drop manually. \nParameters \nA GtkTreeView. \nTRUE if the tree can be reordered. \nThis function is a convenience function to allow you to reorder models that support the Gtk.TreeDragSourceIface and the Gtk.TreeDragDestIface. Both Gtk.TreeStore and Gtk.ListStore support these. If reorderable is true then the user can reorder the model by dragging and dropping rows. The developer can listen to these changes by connecting to the model s row inserted and row deleted signals. The reordering is implemented by setting up the tree view as a drag source and destination. Therefore drag and drop can not be used in a reorderable view for any other purpose. \nThis function does not give you any degree of control over the order any reordering is allowed. If more control is needed you should probably handle drag and drop manually. \nParameters \nA Gtk.TreeView. \ntrue if the tree can be reordered. \n"});