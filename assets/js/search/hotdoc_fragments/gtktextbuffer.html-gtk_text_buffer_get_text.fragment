fragment_downloaded_cb({"url": "gtktextbuffer.html#gtk_text_buffer_get_text", "fragment": "Gtk.TextBuffer.get_text \ngtk_text_buffer_get_text \nGtk.prototype.get_text \nReturns the text in the range start end Excludes undisplayed text text marked with tags that set the invisibility attribute if include_hidden_chars is False. Does not include characters representing embedded images so byte and character indexes into the returned string do not correspond to byte and character indexes into the buffer. Contrast with Gtk.TextBuffer.get_slice. \nParameters \na Gtk.TextBuffer \nstart of a range \nend of a range \nwhether to include invisible text \nan allocated UTF string \nReturns the text in the range start end Excludes undisplayed text text marked with tags that set the invisibility attribute if include_hidden_chars is FALSE. Does not include characters representing embedded images so byte and character indexes into the returned string do not correspond to byte and character indexes into the buffer. Contrast with gtk_text_buffer_get_slice. \nParameters \na GtkTextBuffer \nstart of a range \nend of a range \nwhether to include invisible text \nan allocated UTF string \nReturns the text in the range start end Excludes undisplayed text text marked with tags that set the invisibility attribute if include_hidden_chars is false. Does not include characters representing embedded images so byte and character indexes into the returned string do not correspond to byte and character indexes into the buffer. Contrast with Gtk.prototype.get_slice. \nParameters \na Gtk.TextBuffer \nstart of a range \nend of a range \nwhether to include invisible text \nan allocated UTF string \n"});