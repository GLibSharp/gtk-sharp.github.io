fragment_downloaded_cb({"url": "gtkgesture.html#gtk_gesture_group", "fragment": "Gtk.Gesture.group \ngtk_gesture_group \nGtk.prototype.group \nAdds gesture to the same group than group_gesture. Gestures are by default isolated in their own groups. \nWhen gestures are grouped the state of Gdk.EventSequence is kept in sync for all of those so calling Gtk.Gesture.set_sequence_state on one will transfer the same value to the others. \nGroups also perform an implicit grabbing of sequences if a Gdk.EventSequence state is set to Gtk.EventSequenceState.CLAIMED on one group every other gesture group attached to the same Gtk.Widget will switch the state for that sequence to Gtk.EventSequenceState.DENIED. \nParameters \nGtk.Gesture to group gesture with \na Gtk.Gesture \nSince \nAdds gesture to the same group than group_gesture. Gestures are by default isolated in their own groups. \nWhen gestures are grouped the state of GdkEventSequence is kept in sync for all of those so calling gtk_gesture_set_sequence_state on one will transfer the same value to the others. \nGroups also perform an implicit grabbing of sequences if a GdkEventSequence state is set to GTK_EVENT_SEQUENCE_CLAIMED on one group every other gesture group attached to the same GtkWidget will switch the state for that sequence to GTK_EVENT_SEQUENCE_DENIED. \nParameters \nGtkGesture to group gesture with \na GtkGesture \nSince \nAdds gesture to the same group than group_gesture. Gestures are by default isolated in their own groups. \nWhen gestures are grouped the state of Gdk.EventSequence is kept in sync for all of those so calling Gtk.prototype.set_sequence_state on one will transfer the same value to the others. \nGroups also perform an implicit grabbing of sequences if a Gdk.EventSequence state is set to Gtk.EventSequenceState.CLAIMED on one group every other gesture group attached to the same Gtk.Widget will switch the state for that sequence to Gtk.EventSequenceState.DENIED. \nParameters \nGtk.Gesture to group gesture with \na Gtk.Gesture \nSince \n"});