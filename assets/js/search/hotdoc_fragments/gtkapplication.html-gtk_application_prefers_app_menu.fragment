fragment_downloaded_cb({"url": "gtkapplication.html#gtk_application_prefers_app_menu", "fragment": "gtk_application_prefers_app_menu \nGtk.Application.prefers_app_menu \nGtk.prototype.prefers_app_menu \nDetermines if the desktop environment in which the application is running would prefer an application menu be shown. \nIf this function returns TRUE then the application should call gtk_application_set_app_menu with the contents of an application menu which will be shown by the desktop environment. If it returns FALSE then you should consider using an alternate approach such as a menubar. \nThe value returned by this function is purely advisory and you are free to ignore it. If you call gtk_application_set_app_menu even if the desktop environment doesn t support app menus then a fallback will be provided. \nApplications are similarly free not to set an app menu even if the desktop environment wants to show one. In that case a fallback will also be created by the desktop environment GNOME for example uses a menu with only a Quit item in it \nThe value returned by this function never changes. Once it returns a particular value it is guaranteed to always return the same value. \nYou may only call this function after the application has been registered and after the base startup handler has run. You re most likely to want to use this from your own startup handler. It may also make sense to consult this function while constructing UI in activate open or an action activation handler in order to determine if you should show a gear menu or not. \nThis function will return FALSE on Mac OS and a default app menu will be created automatically with the usual contents of that menu typical to most Mac OS applications. If you call gtk_application_set_app_menu anyway then this menu will be replaced with your own. \nParameters \na GtkApplication \nTRUE if you should set an app menu \nSince \nDetermines if the desktop environment in which the application is running would prefer an application menu be shown. \nIf this function returns True then the application should call Gtk.Application.set_app_menu with the contents of an application menu which will be shown by the desktop environment. If it returns False then you should consider using an alternate approach such as a menubar. \nThe value returned by this function is purely advisory and you are free to ignore it. If you call Gtk.Application.set_app_menu even if the desktop environment doesn t support app menus then a fallback will be provided. \nApplications are similarly free not to set an app menu even if the desktop environment wants to show one. In that case a fallback will also be created by the desktop environment GNOME for example uses a menu with only a Quit item in it \nThe value returned by this function never changes. Once it returns a particular value it is guaranteed to always return the same value. \nYou may only call this function after the application has been registered and after the base startup handler has run. You re most likely to want to use this from your own startup handler. It may also make sense to consult this function while constructing UI in activate open or an action activation handler in order to determine if you should show a gear menu or not. \nThis function will return False on Mac OS and a default app menu will be created automatically with the usual contents of that menu typical to most Mac OS applications. If you call Gtk.Application.set_app_menu anyway then this menu will be replaced with your own. \nParameters \na Gtk.Application \nTrue if you should set an app menu \nSince \nDetermines if the desktop environment in which the application is running would prefer an application menu be shown. \nIf this function returns true then the application should call Gtk.prototype.set_app_menu with the contents of an application menu which will be shown by the desktop environment. If it returns false then you should consider using an alternate approach such as a menubar. \nThe value returned by this function is purely advisory and you are free to ignore it. If you call Gtk.prototype.set_app_menu even if the desktop environment doesn t support app menus then a fallback will be provided. \nApplications are similarly free not to set an app menu even if the desktop environment wants to show one. In that case a fallback will also be created by the desktop environment GNOME for example uses a menu with only a Quit item in it \nThe value returned by this function never changes. Once it returns a particular value it is guaranteed to always return the same value. \nYou may only call this function after the application has been registered and after the base startup handler has run. You re most likely to want to use this from your own startup handler. It may also make sense to consult this function while constructing UI in activate open or an action activation handler in order to determine if you should show a gear menu or not. \nThis function will return false on Mac OS and a default app menu will be created automatically with the usual contents of that menu typical to most Mac OS applications. If you call Gtk.prototype.set_app_menu anyway then this menu will be replaced with your own. \nParameters \na Gtk.Application \ntrue if you should set an app menu \nSince \n"});