fragment_downloaded_cb({"url": "gtkclipboard-h.html#gtk_clipboard_get_for_display", "fragment": "Gtk.Clipboard.GetForDisplay \nReturns the clipboard object for the given selection. Cut copy paste menu items and keyboard shortcuts should use the default clipboard returned by passing GDK_SELECTION_CLIPBOARD not introspectable for selection. GDK_NONE is supported as a synonym for GDK_SELECTION_CLIPBOARD for backwards compatibility reasons. The currently selected object or text should be provided on the clipboard identified by GDK_SELECTION_PRIMARY not introspectable Cut copy paste menu items conceptually copy the contents of the GDK_SELECTION_PRIMARY not introspectable clipboard to the default clipboard i.e. they copy the selection to what the user sees as the clipboard. \nPassing GDK_NONE not introspectable is the same as using gdk_atom_intern CLIPBOARD FALSE \nSee the FreeDesktop Clipboard Specification for a detailed discussion of the CLIPBOARD vs. PRIMARY selections under the X window system. On Win32 the GDK_SELECTION_PRIMARY not introspectable clipboard is essentially ignored. \nIt s possible to have arbitrary named clipboards if you do invent new clipboards you should prefix the selection name with an underscore because the ICCCM requires that nonstandard atoms are underscore prefixed and namespace it as well. For example if your application called Foo has a special purpose clipboard you might call it _FOO_SPECIAL_CLIPBOARD \nParameters \nthe Gdk.Display for which the clipboard is to be retrieved or created. \na Gdk.Atom which identifies the clipboard to use. \nthe appropriate clipboard object. If no clipboard already exists a new one will be created. Once a clipboard object has been created it is persistent and since it is owned by GTK must not be freed or unrefd. \nSince \n"});