fragment_downloaded_cb({"url": "gtkwidget.html#gtk_widget_measure", "fragment": "gtk_widget_measure \nGtk.prototype.measure \nGtk.Widget.measure \nMeasures widget in the orientation orientation and for the given for_size. As an example if orientation is GTK_ORIENTATION_HORIZONTAL and for_size is this functions will compute the minimum and natural width of widget if it is allocated at a height of pixels. \nParameters \nA GtkWidget instance \nthe orientation to measure \nSize for the opposite of orientation i.e. if orientation is GTK_ORIENTATION_HORIZONTAL this is the height the widget should be measured with. The GTK_ORIENTATION_VERTICAL case is analogous. This way both height for width and width for height requests can be implemented. If no size is known can be passed. \nlocation to store the minimum size or NULL \nlocation to store the natural size or NULL \nlocation to store the baseline position for the minimum size or NULL \nlocation to store the baseline position for the natural size or NULL \nSince \nMeasures widget in the orientation orientation and for the given for_size. As an example if orientation is GTK_ORIENTATION_HORIZONTAL and for_size is this functions will compute the minimum and natural width of widget if it is allocated at a height of pixels. \nParameters \nA Gtk.Widget instance \nthe orientation to measure \nSize for the opposite of orientation i.e. if orientation is Gtk.Orientation.HORIZONTAL this is the height the widget should be measured with. The Gtk.Orientation.VERTICAL case is analogous. This way both height for width and width for height requests can be implemented. If no size is known can be passed. \nSince \nMeasures widget in the orientation orientation and for the given for_size. As an example if orientation is GTK_ORIENTATION_HORIZONTAL and for_size is this functions will compute the minimum and natural width of widget if it is allocated at a height of pixels. \nParameters \nA Gtk.Widget instance \nthe orientation to measure \nSize for the opposite of orientation i.e. if orientation is Gtk.Orientation.HORIZONTAL this is the height the widget should be measured with. The Gtk.Orientation.VERTICAL case is analogous. This way both height for width and width for height requests can be implemented. If no size is known can be passed. \nSince \n"});