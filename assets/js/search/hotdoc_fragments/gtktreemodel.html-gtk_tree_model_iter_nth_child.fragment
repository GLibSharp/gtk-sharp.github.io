fragment_downloaded_cb({"url": "gtktreemodel.html#gtk_tree_model_iter_nth_child", "fragment": "Gtk.TreeModel.iter_nth_child \ngtk_tree_model_iter_nth_child \nGtk.prototype.iter_nth_child \nSets iter to be the child of parent using the given index. \nThe first index is If n is too big or parent has no children iter is set to an invalid iterator and False is returned. parent will remain a valid node after this function has been called. As a special case if parent is None then the n th root node is set. \nParameters \na Gtk.TreeModel \nthe Gtk.TreeIter struct to get the child from or None. \nthe index of the desired child \nReturns a tuple made of \nTrue if parent has an n th child \nTrue if parent has an n th child \nSets iter to be the child of parent using the given index. \nThe first index is If n is too big or parent has no children iter is set to an invalid iterator and FALSE is returned. parent will remain a valid node after this function has been called. As a special case if parent is NULL then the n th root node is set. \nParameters \na GtkTreeModel \nthe GtkTreeIter struct to set to the nth child \nthe GtkTreeIter struct to get the child from or NULL. \nthe index of the desired child \nTRUE if parent has an n th child \nSets iter to be the child of parent using the given index. \nThe first index is If n is too big or parent has no children iter is set to an invalid iterator and false is returned. parent will remain a valid node after this function has been called. As a special case if parent is null then the n th root node is set. \nParameters \na Gtk.TreeModel \nthe Gtk.TreeIter struct to get the child from or null. \nthe index of the desired child \nReturns a tuple made of \ntrue if parent has an n th child \ntrue if parent has an n th child \n"});