fragment_downloaded_cb({"url": "gtkicontheme.html#gtk_icon_info_load_symbolic", "fragment": "gtk_icon_info_load_symbolic \nGtk.IconInfo.load_symbolic \nGtk.prototype.load_symbolic \nLoads an icon modifying it to match the system colours for the foreground success warning and error colors provided. If the icon is not a symbolic one the function will return the result from gtk_icon_info_load_icon. \nThis allows loading symbolic icons that will match the system theme. \nUnless you are implementing a widget you will want to use g_themed_icon_new_with_default_fallbacks to load the icon. \nAs implementation details the icon loaded needs to be of SVG type contain the symbolic term as the last component of the icon name and use the fg success warning and error CSS styles in the SVG file itself. \nSee the Symbolic Icons Specification for more information about symbolic icons. \nParameters \na GtkIconInfo \na GdkRGBA representing the foreground color of the icon \na GdkRGBA representing the warning color of the icon or NULL to use the default color \na GdkRGBA representing the warning color of the icon or NULL to use the default color \na GdkRGBA representing the error color of the icon or NULL to use the default color allow none \na gboolean returns whether the loaded icon was a symbolic one and whether the fg color was applied to it. \na GdkPixbuf representing the loaded icon \nSince \nLoads an icon modifying it to match the system colours for the foreground success warning and error colors provided. If the icon is not a symbolic one the function will return the result from Gtk.IconInfo.load_icon. \nThis allows loading symbolic icons that will match the system theme. \nUnless you are implementing a widget you will want to use Gio.ThemedIcon.new_with_default_fallbacks to load the icon. \nAs implementation details the icon loaded needs to be of SVG type contain the symbolic term as the last component of the icon name and use the fg success warning and error CSS styles in the SVG file itself. \nSee the Symbolic Icons Specification for more information about symbolic icons. \nParameters \na Gtk.IconInfo \na Gdk.RGBA representing the foreground color of the icon \na Gdk.RGBA representing the warning color of the icon or None to use the default color \na Gdk.RGBA representing the warning color of the icon or None to use the default color \na Gdk.RGBA representing the error color of the icon or None to use the default color allow none \nReturns a tuple made of \na GdkPixbuf.Pixbuf representing the loaded icon \na GdkPixbuf.Pixbuf representing the loaded icon \nSince \nLoads an icon modifying it to match the system colours for the foreground success warning and error colors provided. If the icon is not a symbolic one the function will return the result from Gtk.prototype.load_icon. \nThis allows loading symbolic icons that will match the system theme. \nUnless you are implementing a widget you will want to use Gio.prototype.new_with_default_fallbacks to load the icon. \nAs implementation details the icon loaded needs to be of SVG type contain the symbolic term as the last component of the icon name and use the fg success warning and error CSS styles in the SVG file itself. \nSee the Symbolic Icons Specification for more information about symbolic icons. \nParameters \na Gtk.IconInfo \na Gdk.RGBA representing the foreground color of the icon \na Gdk.RGBA representing the warning color of the icon or null to use the default color \na Gdk.RGBA representing the warning color of the icon or null to use the default color \na Gdk.RGBA representing the error color of the icon or null to use the default color allow none \nReturns a tuple made of \na GdkPixbuf.Pixbuf representing the loaded icon \na GdkPixbuf.Pixbuf representing the loaded icon \nSince \n"});