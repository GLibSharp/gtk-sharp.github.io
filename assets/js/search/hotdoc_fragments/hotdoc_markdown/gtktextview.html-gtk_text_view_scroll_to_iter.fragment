fragment_downloaded_cb({"url": "hotdoc_markdown/gtktextview.html#gtk_text_view_scroll_to_iter", "fragment": "gtk_text_view_scroll_to_iter \nGtk.prototype.scroll_to_iter \nGtk.TextView.scroll_to_iter \nScrolls text_view so that iter is on the screen in the position indicated by xalign and yalign. An alignment of indicates left or top indicates right or bottom means center. If use_align is FALSE the text scrolls the minimal distance to get the mark onscreen possibly not scrolling at all. The effective screen for purposes of this function is reduced by a margin of size within_margin. \nNote that this function uses the currently computed height of the lines in the text buffer. Line heights are computed in an idle handler so this function may not have the desired effect if it s called before the height computations. To avoid oddness consider using gtk_text_view_scroll_to_mark which saves a point to be scrolled to after line validation. \nParameters \na GtkTextView \na GtkTextIter \nmargin as a fraction of screen size \nwhether to use alignment arguments if FALSE just get the mark onscreen \nhorizontal alignment of mark within visible area \nvertical alignment of mark within visible area \nTRUE if scrolling occurred \nScrolls text_view so that iter is on the screen in the position indicated by xalign and yalign. An alignment of indicates left or top indicates right or bottom means center. If use_align is false the text scrolls the minimal distance to get the mark onscreen possibly not scrolling at all. The effective screen for purposes of this function is reduced by a margin of size within_margin. \nNote that this function uses the currently computed height of the lines in the text buffer. Line heights are computed in an idle handler so this function may not have the desired effect if it s called before the height computations. To avoid oddness consider using Gtk.prototype.scroll_to_mark which saves a point to be scrolled to after line validation. \nParameters \na Gtk.TextView \na Gtk.TextIter \nmargin as a fraction of screen size \nwhether to use alignment arguments if false just get the mark onscreen \nhorizontal alignment of mark within visible area \nvertical alignment of mark within visible area \ntrue if scrolling occurred \nScrolls text_view so that iter is on the screen in the position indicated by xalign and yalign. An alignment of indicates left or top indicates right or bottom means center. If use_align is False the text scrolls the minimal distance to get the mark onscreen possibly not scrolling at all. The effective screen for purposes of this function is reduced by a margin of size within_margin. \nNote that this function uses the currently computed height of the lines in the text buffer. Line heights are computed in an idle handler so this function may not have the desired effect if it s called before the height computations. To avoid oddness consider using Gtk.TextView.scroll_to_mark which saves a point to be scrolled to after line validation. \nParameters \na Gtk.TextView \na Gtk.TextIter \nmargin as a fraction of screen size \nwhether to use alignment arguments if False just get the mark onscreen \nhorizontal alignment of mark within visible area \nvertical alignment of mark within visible area \nTrue if scrolling occurred \n"});