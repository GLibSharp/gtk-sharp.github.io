fragment_downloaded_cb({"url": "hotdoc_markdown/gtkcelllayout.html#gtk_cell_layout_add_attribute", "fragment": "gtk_cell_layout_add_attribute \nGtk.prototype.add_attribute \nGtk.CellLayout.add_attribute \nAdds an attribute mapping to the list in cell_layout. \nThe column is the column of the model to get a value from and the attribute is the parameter on cell to be set from the value. So for example if column of the model contains strings you could have the text attribute of a GtkCellRendererText get its values from column \nParameters \na GtkCellLayout \na GtkCellRenderer \nan attribute on the renderer \nthe column position on the model to get the attribute from \nSince \nAdds an attribute mapping to the list in cell_layout. \nThe column is the column of the model to get a value from and the attribute is the parameter on cell to be set from the value. So for example if column of the model contains strings you could have the text attribute of a Gtk.CellRendererText get its values from column \nParameters \na Gtk.CellLayout \na Gtk.CellRenderer \nan attribute on the renderer \nthe column position on the model to get the attribute from \nSince \nAdds an attribute mapping to the list in cell_layout. \nThe column is the column of the model to get a value from and the attribute is the parameter on cell to be set from the value. So for example if column of the model contains strings you could have the text attribute of a Gtk.CellRendererText get its values from column \nParameters \na Gtk.CellLayout \na Gtk.CellRenderer \nan attribute on the renderer \nthe column position on the model to get the attribute from \nSince \n"});