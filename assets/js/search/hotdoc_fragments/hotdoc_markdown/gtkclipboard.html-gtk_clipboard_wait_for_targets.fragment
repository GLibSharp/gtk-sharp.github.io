fragment_downloaded_cb({"url": "hotdoc_markdown/gtkclipboard.html#gtk_clipboard_wait_for_targets", "fragment": "gtk_clipboard_wait_for_targets \nGtk.prototype.wait_for_targets \nGtk.Clipboard.wait_for_targets \nReturns a list of targets that are present on the clipboard or NULL if there aren t any targets available. The returned list must be freed with g_free. This function waits for the data to be received using the main loop so events timeouts etc may be dispatched during the wait. \nParameters \na GtkClipboard \nlocation to store an array of targets. The result stored here must be freed with g_free. \nlocation to store number of items in targets. \nTRUE if any targets are present on the clipboard otherwise FALSE. \nSince \nReturns a list of targets that are present on the clipboard or null if there aren t any targets available. The returned list must be freed with prototype.free. This function waits for the data to be received using the main loop so events timeouts etc may be dispatched during the wait. \nParameters \na Gtk.Clipboard \nReturns a tuple made of \ntrue if any targets are present on the clipboard otherwise false. \ntrue if any targets are present on the clipboard otherwise false. \ntrue if any targets are present on the clipboard otherwise false. \nSince \nReturns a list of targets that are present on the clipboard or None if there aren t any targets available. The returned list must be freed with GLib.free. This function waits for the data to be received using the main loop so events timeouts etc may be dispatched during the wait. \nParameters \na Gtk.Clipboard \nReturns a tuple made of \nTrue if any targets are present on the clipboard otherwise False. \nTrue if any targets are present on the clipboard otherwise False. \nTrue if any targets are present on the clipboard otherwise False. \nSince \n"});