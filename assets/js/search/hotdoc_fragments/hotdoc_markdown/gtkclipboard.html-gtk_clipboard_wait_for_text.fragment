fragment_downloaded_cb({"url": "hotdoc_markdown/gtkclipboard.html#gtk_clipboard_wait_for_text", "fragment": "gtk_clipboard_wait_for_text \nGtk.prototype.wait_for_text \nGtk.Clipboard.wait_for_text \nRequests the contents of the clipboard as text and converts the result to UTF if necessary. This function waits for the data to be received using the main loop so events timeouts etc may be dispatched during the wait. \nParameters \na GtkClipboard \na newly allocated UTF string which must be freed with g_free or NULL if retrieving the selection data failed. This could happen for various reasons in particular if the clipboard was empty or if the contents of the clipboard could not be converted into text form. \nRequests the contents of the clipboard as text and converts the result to UTF if necessary. This function waits for the data to be received using the main loop so events timeouts etc may be dispatched during the wait. \nParameters \na Gtk.Clipboard \na newly allocated UTF string which must be freed with prototype.free or null if retrieving the selection data failed. This could happen for various reasons in particular if the clipboard was empty or if the contents of the clipboard could not be converted into text form. \nRequests the contents of the clipboard as text and converts the result to UTF if necessary. This function waits for the data to be received using the main loop so events timeouts etc may be dispatched during the wait. \nParameters \na Gtk.Clipboard \na newly allocated UTF string which must be freed with GLib.free or None if retrieving the selection data failed. This could happen for various reasons in particular if the clipboard was empty or if the contents of the clipboard could not be converted into text form. \n"});