fragment_downloaded_cb({"url": "hotdoc_markdown/gtktextbuffer.html#gtk_text_buffer_delete", "fragment": "gtk_text_buffer_delete \nGtk.prototype.delete \nGtk.TextBuffer.delete \nDeletes text between start and end. The order of start and end is not actually relevant gtk_text_buffer_delete will reorder them. This function actually emits the delete range signal and the default handler of that signal deletes the text. Because the buffer is modified all outstanding iterators become invalid after calling this function however the start and end will be re initialized to point to the location where text was deleted. \nParameters \na GtkTextBuffer \na position in buffer \nanother position in buffer \nDeletes text between start and end. The order of start and end is not actually relevant Gtk.prototype.delete will reorder them. This function actually emits the delete range signal and the default handler of that signal deletes the text. Because the buffer is modified all outstanding iterators become invalid after calling this function however the start and end will be re initialized to point to the location where text was deleted. \nParameters \na Gtk.TextBuffer \na position in buffer \nanother position in buffer \nDeletes text between start and end. The order of start and end is not actually relevant Gtk.TextBuffer.delete will reorder them. This function actually emits the delete range signal and the default handler of that signal deletes the text. Because the buffer is modified all outstanding iterators become invalid after calling this function however the start and end will be re initialized to point to the location where text was deleted. \nParameters \na Gtk.TextBuffer \na position in buffer \nanother position in buffer \n"});