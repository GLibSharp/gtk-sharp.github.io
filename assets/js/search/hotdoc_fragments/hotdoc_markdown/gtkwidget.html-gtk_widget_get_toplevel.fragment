fragment_downloaded_cb({"url": "hotdoc_markdown/gtkwidget.html#gtk_widget_get_toplevel", "fragment": "gtk_widget_get_toplevel \nGtk.prototype.get_toplevel \nGtk.Widget.get_toplevel \nThis function returns the topmost widget in the container hierarchy widget is a part of. If widget has no parent widgets it will be returned as the topmost widget. No reference will be added to the returned widget it should not be unreferenced. \nNote the difference in behavior vs. gtk_widget_get_ancestor gtk_widget_get_ancestor widget GTK_TYPE_WINDOW would return NULL if widget wasn t inside a toplevel window and if the window was inside a GtkWindow derived widget which was in turn inside the toplevel GtkWindow. \nTo reliably find the toplevel GtkWindow use gtk_widget_get_toplevel and call gtk_widget_is_toplevel on the result. \nParameters \na GtkWidget \nthe topmost ancestor of widget or widget itself if there s no ancestor. \nThis function returns the topmost widget in the container hierarchy widget is a part of. If widget has no parent widgets it will be returned as the topmost widget. No reference will be added to the returned widget it should not be unreferenced. \nNote the difference in behavior vs. Gtk.prototype.get_ancestor gtk_widget_get_ancestor widget GTK_TYPE_WINDOW would return null if widget wasn t inside a toplevel window and if the window was inside a Gtk.Window derived widget which was in turn inside the toplevel Gtk.Window. \nTo reliably find the toplevel Gtk.Window use Gtk.prototype.get_toplevel and call Gtk.prototype.is_toplevel on the result. \nParameters \na Gtk.Widget \nthe topmost ancestor of widget or widget itself if there s no ancestor. \nThis function returns the topmost widget in the container hierarchy widget is a part of. If widget has no parent widgets it will be returned as the topmost widget. No reference will be added to the returned widget it should not be unreferenced. \nNote the difference in behavior vs. Gtk.Widget.get_ancestor gtk_widget_get_ancestor widget GTK_TYPE_WINDOW would return None if widget wasn t inside a toplevel window and if the window was inside a Gtk.Window derived widget which was in turn inside the toplevel Gtk.Window. \nTo reliably find the toplevel Gtk.Window use Gtk.Widget.get_toplevel and call Gtk.Widget.is_toplevel on the result. \nParameters \na Gtk.Widget \nthe topmost ancestor of widget or widget itself if there s no ancestor. \n"});