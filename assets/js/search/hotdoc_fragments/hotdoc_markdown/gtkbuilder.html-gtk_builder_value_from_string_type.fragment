fragment_downloaded_cb({"url": "hotdoc_markdown/gtkbuilder.html#gtk_builder_value_from_string_type", "fragment": "gtk_builder_value_from_string_type \nGtk.prototype.value_from_string_type \nGtk.Builder.value_from_string_type \nLike gtk_builder_value_from_string this function demarshals a value from a string but takes a GType instead of GParamSpec. This function calls g_value_init on the value argument so it need not be initialised beforehand. \nUpon errors FALSE will be returned and error will be assigned a GError from the GTK_BUILDER_ERROR domain. \nParameters \na GtkBuilder \nthe GType of the value \nthe string representation of the value \nthe GValue to store the result in \nTRUE on success \nSince \nLike Gtk.prototype.value_from_string this function demarshals a value from a string but takes a GObject.Type instead of GObject.ParamSpec. This function calls GObject.prototype.init on the value argument so it need not be initialised beforehand. \nUpon errors false will be returned and error will be assigned a GLib.Error from the GTK_BUILDER_ERROR not introspectable domain. \nParameters \na Gtk.Builder \nthe GObject.Type of the value \nthe string representation of the value \nReturns a tuple made of \ntrue on success \ntrue on success \nSince \nLike Gtk.Builder.value_from_string this function demarshals a value from a string but takes a GObject.Type instead of GObject.ParamSpec. This function calls GObject.Value.init on the value argument so it need not be initialised beforehand. \nUpon errors False will be returned and error will be assigned a GLib.Error from the GTK_BUILDER_ERROR not introspectable domain. \nParameters \na Gtk.Builder \nthe GObject.Type of the value \nthe string representation of the value \nReturns a tuple made of \nTrue on success \nTrue on success \nSince \n"});