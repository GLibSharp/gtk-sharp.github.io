fragment_downloaded_cb({"url": "hotdoc_markdown/gtkrecentchooser.html#gtk_recent_chooser_set_sort_func", "fragment": "gtk_recent_chooser_set_sort_func \nGtk.prototype.set_sort_func \nGtk.RecentChooser.set_sort_func \nSets the comparison function used when sorting to be sort_func. If the chooser has the sort type set to GTK_RECENT_SORT_CUSTOM then the chooser will sort using this function. \nTo the comparison function will be passed two GtkRecentInfo structs and sort_data sort_func should return a positive integer if the first item comes before the second zero if the two items are equal and a negative integer if the first item comes after the second. \nParameters \na GtkRecentChooser \nthe comparison function \nuser data to pass to sort_func or NULL \ndestroy notifier for sort_data or NULL \nSince \nSets the comparison function used when sorting to be sort_func. If the chooser has the sort type set to Gtk.RecentSortType.CUSTOM then the chooser will sort using this function. \nTo the comparison function will be passed two Gtk.RecentInfo structs and sort_data sort_func should return a positive integer if the first item comes before the second zero if the two items are equal and a negative integer if the first item comes after the second. \nParameters \na Gtk.RecentChooser \nthe comparison function \nuser data to pass to sort_func or null \ndestroy notifier for sort_data or null \nSince \nSets the comparison function used when sorting to be sort_func. If the chooser has the sort type set to Gtk.RecentSortType.CUSTOM then the chooser will sort using this function. \nTo the comparison function will be passed two Gtk.RecentInfo structs and sort_data sort_func should return a positive integer if the first item comes before the second zero if the two items are equal and a negative integer if the first item comes after the second. \nParameters \na Gtk.RecentChooser \nthe comparison function \nuser data to pass to sort_func or None \ndestroy notifier for sort_data or None \nSince \n"});