fragment_downloaded_cb({"url": "hotdoc_markdown/gtkpopover.html#gtk_popover_new_from_model", "fragment": "gtk_popover_new_from_model \nGtk.prototype.new_from_model \nGtk.Popover.new_from_model \nCreates a GtkPopover and populates it according to model. The popover is pointed to the relative_to widget. \nThe created buttons are connected to actions found in the GtkApplicationWindow to which the popover belongs typically by means of being attached to a widget that is contained within the GtkApplicationWindow widget hierarchy. \nActions can also be added using gtk_widget_insert_action_group on the menus attach widget or on any of its parent widgets. \nParameters \nGtkWidget the popover is related to \na GMenuModel \nthe new GtkPopover \nSince \nCreates a Gtk.Popover and populates it according to model. The popover is pointed to the relative_to widget. \nThe created buttons are connected to actions found in the Gtk.ApplicationWindow to which the popover belongs typically by means of being attached to a widget that is contained within the Gtk.ApplicationWindow widget hierarchy. \nActions can also be added using Gtk.prototype.insert_action_group on the menus attach widget or on any of its parent widgets. \nParameters \nGtk.Widget the popover is related to \na Gio.MenuModel \nthe new Gtk.Popover \nSince \nCreates a Gtk.Popover and populates it according to model. The popover is pointed to the relative_to widget. \nThe created buttons are connected to actions found in the Gtk.ApplicationWindow to which the popover belongs typically by means of being attached to a widget that is contained within the Gtk.ApplicationWindow widget hierarchy. \nActions can also be added using Gtk.Widget.insert_action_group on the menus attach widget or on any of its parent widgets. \nParameters \nGtk.Widget the popover is related to \na Gio.MenuModel \nthe new Gtk.Popover \nSince \n"});