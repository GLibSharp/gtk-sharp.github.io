fragment_downloaded_cb({"url": "hotdoc_markdown/gtkicontheme.html#gtk_icon_theme_lookup_icon", "fragment": "gtk_icon_theme_lookup_icon \nGtk.prototype.lookup_icon \nGtk.IconTheme.lookup_icon \nLooks up a named icon and returns a GtkIconInfo containing information such as the filename of the icon. The icon can then be rendered into a pixbuf using gtk_icon_info_load_icon. gtk_icon_theme_load_icon combines these two steps if all you need is the pixbuf. \nWhen rendering on displays with high pixel densities you should not use a size multiplied by the scaling factor returned by functions like gdk_window_get_scale_factor. Instead you should use gtk_icon_theme_lookup_icon_for_scale as the assets loaded for a given scaling factor may be different. \nParameters \na GtkIconTheme \nthe name of the icon to lookup \ndesired icon size \nflags modifying the behavior of the icon lookup \na GtkIconInfo object containing information about the icon or NULL if the icon wasn t found. \nSince \nLooks up a named icon and returns a Gtk.IconInfo containing information such as the filename of the icon. The icon can then be rendered into a pixbuf using Gtk.prototype.load_icon. Gtk.prototype.load_icon combines these two steps if all you need is the pixbuf. \nWhen rendering on displays with high pixel densities you should not use a size multiplied by the scaling factor returned by functions like Gdk.prototype.get_scale_factor. Instead you should use Gtk.prototype.lookup_icon_for_scale as the assets loaded for a given scaling factor may be different. \nParameters \na Gtk.IconTheme \nthe name of the icon to lookup \ndesired icon size \nflags modifying the behavior of the icon lookup \na Gtk.IconInfo object containing information about the icon or null if the icon wasn t found. \nSince \nLooks up a named icon and returns a Gtk.IconInfo containing information such as the filename of the icon. The icon can then be rendered into a pixbuf using Gtk.IconInfo.load_icon. Gtk.IconTheme.load_icon combines these two steps if all you need is the pixbuf. \nWhen rendering on displays with high pixel densities you should not use a size multiplied by the scaling factor returned by functions like Gdk.Window.get_scale_factor. Instead you should use Gtk.IconTheme.lookup_icon_for_scale as the assets loaded for a given scaling factor may be different. \nParameters \na Gtk.IconTheme \nthe name of the icon to lookup \ndesired icon size \nflags modifying the behavior of the icon lookup \na Gtk.IconInfo object containing information about the icon or None if the icon wasn t found. \nSince \n"});