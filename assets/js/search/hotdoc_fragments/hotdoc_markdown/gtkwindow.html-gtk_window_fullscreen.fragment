fragment_downloaded_cb({"url": "hotdoc_markdown/gtkwindow.html#gtk_window_fullscreen", "fragment": "gtk_window_fullscreen \nGtk.prototype.fullscreen \nGtk.Window.fullscreen \nAsks to place window in the fullscreen state. Note that you shouldn t assume the window is definitely full screen afterward because other entities e.g. the user or window manager gtk X11 arch could unfullscreen it again and not all window managers honor requests to fullscreen windows. But normally the window will end up fullscreen. Just don t write code that crashes if not. \nYou can track the fullscreen state via the window state event signal on GtkWidget. \nParameters \na GtkWindow \nSince \nAsks to place window in the fullscreen state. Note that you shouldn t assume the window is definitely full screen afterward because other entities e.g. the user or window manager gtk X11 arch could unfullscreen it again and not all window managers honor requests to fullscreen windows. But normally the window will end up fullscreen. Just don t write code that crashes if not. \nYou can track the fullscreen state via the window state event signal on Gtk.Widget. \nParameters \na Gtk.Window \nSince \nAsks to place window in the fullscreen state. Note that you shouldn t assume the window is definitely full screen afterward because other entities e.g. the user or window manager gtk X11 arch could unfullscreen it again and not all window managers honor requests to fullscreen windows. But normally the window will end up fullscreen. Just don t write code that crashes if not. \nYou can track the fullscreen state via the window state event signal on Gtk.Widget. \nParameters \na Gtk.Window \nSince \n"});