fragment_downloaded_cb({"url": "hotdoc_markdown/gtktreeviewcolumn.html#gtk_tree_view_column_cell_set_cell_data", "fragment": "gtk_tree_view_column_cell_set_cell_data \nGtk.prototype.cell_set_cell_data \nGtk.TreeViewColumn.cell_set_cell_data \nSets the cell renderer based on the tree_model and iter. That is for every attribute mapping in tree_column it will get a value from the set column on the iter and use that value to set the attribute on the cell renderer. This is used primarily by the GtkTreeView. \nParameters \nA GtkTreeViewColumn. \nThe GtkTreeModel to to get the cell renderers attributes from. \nThe GtkTreeIter to to get the cell renderer s attributes from. \nTRUE if the row has children \nTRUE if the row has visible children \nSets the cell renderer based on the tree_model and iter. That is for every attribute mapping in tree_column it will get a value from the set column on the iter and use that value to set the attribute on the cell renderer. This is used primarily by the Gtk.TreeView. \nParameters \nA Gtk.TreeViewColumn. \nThe Gtk.TreeModel to to get the cell renderers attributes from. \nThe Gtk.TreeIter to to get the cell renderer s attributes from. \ntrue if the row has children \ntrue if the row has visible children \nSets the cell renderer based on the tree_model and iter. That is for every attribute mapping in tree_column it will get a value from the set column on the iter and use that value to set the attribute on the cell renderer. This is used primarily by the Gtk.TreeView. \nParameters \nA Gtk.TreeViewColumn. \nThe Gtk.TreeModel to to get the cell renderers attributes from. \nThe Gtk.TreeIter to to get the cell renderer s attributes from. \nTrue if the row has children \nTrue if the row has visible children \n"});