fragment_downloaded_cb({"url": "hotdoc_markdown/gtktextbuffer.html#gtk_text_buffer_deserialize_set_can_create_tags", "fragment": "gtk_text_buffer_deserialize_set_can_create_tags \nGtk.prototype.deserialize_set_can_create_tags \nGtk.TextBuffer.deserialize_set_can_create_tags \nUse this function to allow a rich text deserialization function to create new tags in the receiving buffer. Note that using this function is almost always a bad idea because the rich text functions you register should know how to map the rich text format they handler to your text buffers set of tags. \nThe ability of creating new arbitrary tags in the receiving buffer is meant for special rich text formats like the internal one that is registered using gtk_text_buffer_register_deserialize_tagset because that format is essentially a dump of the internal structure of the source buffer including its tag names. \nYou should allow creation of tags only if you know what you are doing e.g. if you defined a tagset name for your application suite s text buffers and you know that it s fine to receive new tags from these buffers because you know that your application can handle the newly created tags. \nParameters \na GtkTextBuffer \na GdkAtom representing a registered rich text format \nwhether deserializing this format may create tags \nSince \nUse this function to allow a rich text deserialization function to create new tags in the receiving buffer. Note that using this function is almost always a bad idea because the rich text functions you register should know how to map the rich text format they handler to your text buffers set of tags. \nThe ability of creating new arbitrary tags in the receiving buffer is meant for special rich text formats like the internal one that is registered using Gtk.prototype.register_deserialize_tagset because that format is essentially a dump of the internal structure of the source buffer including its tag names. \nYou should allow creation of tags only if you know what you are doing e.g. if you defined a tagset name for your application suite s text buffers and you know that it s fine to receive new tags from these buffers because you know that your application can handle the newly created tags. \nParameters \na Gtk.TextBuffer \na Gdk.Atom representing a registered rich text format \nwhether deserializing this format may create tags \nSince \nUse this function to allow a rich text deserialization function to create new tags in the receiving buffer. Note that using this function is almost always a bad idea because the rich text functions you register should know how to map the rich text format they handler to your text buffers set of tags. \nThe ability of creating new arbitrary tags in the receiving buffer is meant for special rich text formats like the internal one that is registered using Gtk.TextBuffer.register_deserialize_tagset because that format is essentially a dump of the internal structure of the source buffer including its tag names. \nYou should allow creation of tags only if you know what you are doing e.g. if you defined a tagset name for your application suite s text buffers and you know that it s fine to receive new tags from these buffers because you know that your application can handle the newly created tags. \nParameters \na Gtk.TextBuffer \na Gdk.Atom representing a registered rich text format \nwhether deserializing this format may create tags \nSince \n"});