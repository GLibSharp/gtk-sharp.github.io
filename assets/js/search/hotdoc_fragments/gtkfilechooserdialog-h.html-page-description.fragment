fragment_downloaded_cb({"url": "gtkfilechooserdialog-h.html#page-description", "fragment": "GtkFileChooserDialog is a dialog box suitable for use with File Open or File Save as commands. This widget works by putting a GtkFileChooserWidget inside a GtkDialog. It exposes the GtkFileChooser interface so you can use all of the GtkFileChooser functions on the file chooser dialog as well as those for GtkDialog. \nNote that GtkFileChooserDialog does not have any methods of its own. Instead you should use the functions that work on a GtkFileChooser. \nIf you want to integrate well with the platform you should use the GtkFileChooserNative API which will use a platform specific dialog if available and fall back to GtkFileChooserDialog otherwise. \nIn the simplest of cases you can the following code to use GtkFileChooserDialog to select a file for opening \nTo use a dialog for saving you can use this \nThere are various cases in which you may need to use a GtkFileChooserDialog \nTo select a file for opening. Use GTK_FILE_CHOOSER_ACTION_OPEN. \nTo save a file for the first time. Use GTK_FILE_CHOOSER_ACTION_SAVE and suggest a name such as Untitled with gtk_file_chooser_set_current_name. \nTo save a file under a different name. Use GTK_FILE_CHOOSER_ACTION_SAVE and set the existing filename with gtk_file_chooser_set_filename. \nTo choose a folder instead of a file. Use GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER. \nNote that old versions of the file chooser s documentation suggested using gtk_file_chooser_set_current_folder in various situations with the intention of letting the application suggest a reasonable default folder. This is no longer considered to be a good policy as now the file chooser is able to make good suggestions on its own. In general you should only cause the file chooser to show a specific folder when it is appropriate to use gtk_file_chooser_set_filename i.e. when you are doing a Save As command and you already have a file saved somewhere. \nGtkFileChooserDialog inherits from GtkDialog so buttons that go in its action area have response codes such as GTK_RESPONSE_ACCEPT and GTK_RESPONSE_CANCEL. For example you could call gtk_file_chooser_dialog_new as follows \nThis will create buttons for Cancel and Open that use stock response identifiers from GtkResponseType. For most dialog boxes you can use your own custom response codes rather than the ones in GtkResponseType but GtkFileChooserDialog assumes that its accept type action e.g. an Open or Save button will have one of the following response codes \nThis is because GtkFileChooserDialog must intercept responses and switch to folders if appropriate rather than letting the dialog terminate the implementation uses these known response codes to know which responses can be blocked if appropriate. \nTo summarize make sure you use a stock response code gtkfilechooserdialog responses when you use GtkFileChooserDialog to ensure proper operation. \n"});