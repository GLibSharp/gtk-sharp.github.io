fragment_downloaded_cb({"url": "gtkcheckbutton.html#gtk_check_button_set_inconsistent", "fragment": "gtk_check_button_set_inconsistent \nGtk.prototype.set_inconsistent \nGtk.CheckButton.set_inconsistent \nIf the user has selected a range of elements such as some text or spreadsheet cells that are affected by a check button and the current values in that range are inconsistent you may want to display the toggle in an in between state. Normally you would turn off the inconsistent state again if the user checks the check button. This has to be done manually gtk_check_button_set_inconsistent only affects visual appearance not the semantics of the button. \nParameters \na GtkCheckButton \nTRUE if state is inconsistent \nIf the user has selected a range of elements such as some text or spreadsheet cells that are affected by a check button and the current values in that range are inconsistent you may want to display the toggle in an in between state. Normally you would turn off the inconsistent state again if the user checks the check button. This has to be done manually gtk_check_button_set_inconsistent only affects visual appearance not the semantics of the button. \nParameters \na Gtk.CheckButton \ntrue if state is inconsistent \nIf the user has selected a range of elements such as some text or spreadsheet cells that are affected by a check button and the current values in that range are inconsistent you may want to display the toggle in an in between state. Normally you would turn off the inconsistent state again if the user checks the check button. This has to be done manually gtk_check_button_set_inconsistent only affects visual appearance not the semantics of the button. \nParameters \na Gtk.CheckButton \nTrue if state is inconsistent \n"});