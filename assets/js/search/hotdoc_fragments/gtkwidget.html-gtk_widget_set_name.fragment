fragment_downloaded_cb({"url": "gtkwidget.html#gtk_widget_set_name", "fragment": "gtk_widget_set_name \nGtk.prototype.set_name \nGtk.Widget.set_name \nWidgets can be named which allows you to refer to them from a CSS file. You can apply a style to widgets with a particular name in the CSS file. See the documentation for the CSS syntax on the same page as the docs for GtkStyleContext \nNote that the CSS syntax has certain special characters to delimit and represent elements in a selector period so using these will make your widget impossible to match by name. Any combination of alphanumeric symbols dashes and underscores will suffice. \nParameters \na GtkWidget \nname for the widget \nWidgets can be named which allows you to refer to them from a CSS file. You can apply a style to widgets with a particular name in the CSS file. See the documentation for the CSS syntax on the same page as the docs for Gtk.StyleContext \nNote that the CSS syntax has certain special characters to delimit and represent elements in a selector period so using these will make your widget impossible to match by name. Any combination of alphanumeric symbols dashes and underscores will suffice. \nParameters \na Gtk.Widget \nname for the widget \nWidgets can be named which allows you to refer to them from a CSS file. You can apply a style to widgets with a particular name in the CSS file. See the documentation for the CSS syntax on the same page as the docs for Gtk.StyleContext \nNote that the CSS syntax has certain special characters to delimit and represent elements in a selector period so using these will make your widget impossible to match by name. Any combination of alphanumeric symbols dashes and underscores will suffice. \nParameters \na Gtk.Widget \nname for the widget \n"});