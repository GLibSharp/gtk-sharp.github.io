fragment_downloaded_cb({"url": "gtktreestore.html#gtk_tree_store_append", "fragment": "gtk_tree_store_append \nGtk.prototype.append \nGtk.TreeStore.append \nAppends a new row to tree_store. If parent is non NULL then it will append the new row after the last child of parent otherwise it will append a row to the top level. iter will be changed to point to this new row. The row will be empty after this function is called. To fill in values you need to call gtk_tree_store_set or gtk_tree_store_set_value. \nParameters \nA GtkTreeStore \nAn unset GtkTreeIter to set to the appended row \nA valid GtkTreeIter or NULL \nAppends a new row to tree_store. If parent is non NULL then it will append the new row after the last child of parent otherwise it will append a row to the top level. iter will be changed to point to this new row. The row will be empty after this function is called. To fill in values you need to call gtk_tree_store_set not introspectable or Gtk.prototype.set_value. \nParameters \nA Gtk.TreeStore \nA valid Gtk.TreeIter or null \nAppends a new row to tree_store. If parent is non NULL then it will append the new row after the last child of parent otherwise it will append a row to the top level. iter will be changed to point to this new row. The row will be empty after this function is called. To fill in values you need to call gtk_tree_store_set not introspectable or Gtk.TreeStore.set_value. \nParameters \nA Gtk.TreeStore \nA valid Gtk.TreeIter or None \n"});