fragment_downloaded_cb({"url": "gtkimcontext.html#gtk_im_context_get_surrounding", "fragment": "gtk_im_context_get_surrounding \nGtk.IMContext.get_surrounding \nGtk.prototype.get_surrounding \nRetrieves context around the insertion point. Input methods typically want context in order to constrain input text based on existing text this is important for languages such as Thai where only some sequences of characters are allowed. \nThis function is implemented by emitting the GtkIMContext retrieve_surrounding signal on the input method in response to this signal a widget should provide as much context as is available up to an entire paragraph by calling gtk_im_context_set_surrounding. Note that there is no obligation for a widget to respond to the retrieve_surrounding signal so input methods must be prepared to function without context. \nParameters \na GtkIMContext \nlocation to store a UTF encoded string of text holding context around the insertion point. If the function returns TRUE then you must free the result stored in this location with g_free. \nlocation to store byte index of the insertion cursor within text. \nTRUE if surrounding text was provided in this case you must free the result stored in text. \nRetrieves context around the insertion point. Input methods typically want context in order to constrain input text based on existing text this is important for languages such as Thai where only some sequences of characters are allowed. \nThis function is implemented by emitting the GtkIMContext retrieve_surrounding signal on the input method in response to this signal a widget should provide as much context as is available up to an entire paragraph by calling Gtk.IMContext.set_surrounding. Note that there is no obligation for a widget to respond to the retrieve_surrounding signal so input methods must be prepared to function without context. \nParameters \na Gtk.IMContext \nReturns a tuple made of \nTrue if surrounding text was provided in this case you must free the result stored in text. \nTrue if surrounding text was provided in this case you must free the result stored in text. \nTrue if surrounding text was provided in this case you must free the result stored in text. \nRetrieves context around the insertion point. Input methods typically want context in order to constrain input text based on existing text this is important for languages such as Thai where only some sequences of characters are allowed. \nThis function is implemented by emitting the GtkIMContext retrieve_surrounding signal on the input method in response to this signal a widget should provide as much context as is available up to an entire paragraph by calling Gtk.prototype.set_surrounding. Note that there is no obligation for a widget to respond to the retrieve_surrounding signal so input methods must be prepared to function without context. \nParameters \na Gtk.IMContext \nReturns a tuple made of \ntrue if surrounding text was provided in this case you must free the result stored in text. \ntrue if surrounding text was provided in this case you must free the result stored in text. \ntrue if surrounding text was provided in this case you must free the result stored in text. \n"});