fragment_downloaded_cb({"url": "gtkwidget.html#gtk_widget_compute_expand", "fragment": "Gtk.Widget.compute_expand \ngtk_widget_compute_expand \nGtk.prototype.compute_expand \nComputes whether a container should give this widget extra space when possible. Containers should check this rather than looking at Gtk.Widget.get_hexpand or Gtk.Widget.get_vexpand. \nThis function already checks whether the widget is visible so visibility does not need to be checked separately. Non visible widgets are not expanded. \nThe computed expand value uses either the expand setting explicitly set on the widget itself or if none has been explicitly set the widget may expand if some of its children do. \nParameters \nthe widget \nexpand direction \nwhether widget tree rooted here should be expanded \nComputes whether a container should give this widget extra space when possible. Containers should check this rather than looking at gtk_widget_get_hexpand or gtk_widget_get_vexpand. \nThis function already checks whether the widget is visible so visibility does not need to be checked separately. Non visible widgets are not expanded. \nThe computed expand value uses either the expand setting explicitly set on the widget itself or if none has been explicitly set the widget may expand if some of its children do. \nParameters \nthe widget \nexpand direction \nwhether widget tree rooted here should be expanded \nComputes whether a container should give this widget extra space when possible. Containers should check this rather than looking at Gtk.prototype.get_hexpand or Gtk.prototype.get_vexpand. \nThis function already checks whether the widget is visible so visibility does not need to be checked separately. Non visible widgets are not expanded. \nThe computed expand value uses either the expand setting explicitly set on the widget itself or if none has been explicitly set the widget may expand if some of its children do. \nParameters \nthe widget \nexpand direction \nwhether widget tree rooted here should be expanded \n"});