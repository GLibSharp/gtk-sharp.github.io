fragment_downloaded_cb({"url": "gtkselection.html#gtk_selection_data_get_targets", "fragment": "gtk_selection_data_get_targets \nGtk.prototype.get_targets \nGtk.SelectionData.get_targets \nGets the contents of selection_data as an array of targets. This can be used to interpret the results of getting the standard TARGETS target that is always supplied for any selection. \nParameters \na GtkSelectionData object \nout array length n_atoms transfer container location to store an array of targets. The result stored here must be freed with g_free. \nlocation to store number of items in targets. \nTRUE if selection_data contains a valid array of targets otherwise FALSE. \nGets the contents of selection_data as an array of targets. This can be used to interpret the results of getting the standard TARGETS target that is always supplied for any selection. \nParameters \na Gtk.SelectionData object \nReturns a tuple made of \ntrue if selection_data contains a valid array of targets otherwise false. \ntrue if selection_data contains a valid array of targets otherwise false. \ntrue if selection_data contains a valid array of targets otherwise false. \nGets the contents of selection_data as an array of targets. This can be used to interpret the results of getting the standard TARGETS target that is always supplied for any selection. \nParameters \na Gtk.SelectionData object \nReturns a tuple made of \nTrue if selection_data contains a valid array of targets otherwise False. \nTrue if selection_data contains a valid array of targets otherwise False. \nTrue if selection_data contains a valid array of targets otherwise False. \n"});