fragment_downloaded_cb({"url": "gtktextview.html#GtkTextViewClass::draw_layer", "fragment": "draw_layer \ndraw_layer \ndraw_layer \nThe draw_layer vfunc is called before and after the text view is drawing its own text. Applications can override this vfunc in a subclass to draw customized content underneath or above the text. In the Gtk.TextViewLayer.BELOW_TEXT and Gtk.TextViewLayer.ABOVE_TEXT the drawing is done in the buffer coordinate space but the older deprecated layers Gtk.TextViewLayer.BELOW and Gtk.TextViewLayer.ABOVE work in viewport coordinates which makes them unnecessarily hard to use. Since \nParameters \nThe draw_layer vfunc is called before and after the text view is drawing its own text. Applications can override this vfunc in a subclass to draw customized content underneath or above the text. In the Gtk.TextViewLayer.BELOW_TEXT and Gtk.TextViewLayer.ABOVE_TEXT the drawing is done in the buffer coordinate space but the older deprecated layers Gtk.TextViewLayer.BELOW and Gtk.TextViewLayer.ABOVE work in viewport coordinates which makes them unnecessarily hard to use. Since \nParameters \nThe draw_layer vfunc is called before and after the text view is drawing its own text. Applications can override this vfunc in a subclass to draw customized content underneath or above the text. In the GTK_TEXT_VIEW_LAYER_BELOW_TEXT and GTK_TEXT_VIEW_LAYER_ABOVE_TEXT the drawing is done in the buffer coordinate space but the older deprecated layers GTK_TEXT_VIEW_LAYER_BELOW and GTK_TEXT_VIEW_LAYER_ABOVE work in viewport coordinates which makes them unnecessarily hard to use. Since \nParameters \n"});