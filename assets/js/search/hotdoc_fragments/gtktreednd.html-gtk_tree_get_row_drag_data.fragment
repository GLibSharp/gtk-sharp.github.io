fragment_downloaded_cb({"url": "gtktreednd.html#gtk_tree_get_row_drag_data", "fragment": "gtk_tree_get_row_drag_data \nGtk.tree_get_row_drag_data \nprototype.tree_get_row_drag_data \nObtains a tree_model and path from selection data of target type GTK_TREE_MODEL_ROW. Normally called from a drag_data_received handler. This function can only be used if selection_data originates from the same process that s calling this function because a pointer to the tree model is being passed around. If you aren t in the same process then you ll get memory corruption. In the GtkTreeDragDest drag_data_received handler you can assume that selection data of type GTK_TREE_MODEL_ROW is in from the current process. The returned path must be freed with gtk_tree_path_free. \nParameters \na GtkSelectionData \na GtkTreeModel \nrow in tree_model \nTRUE if selection_data had target type GTK_TREE_MODEL_ROW and is otherwise valid \nObtains a tree_model and path from selection data of target type GTK_TREE_MODEL_ROW. Normally called from a drag_data_received handler. This function can only be used if selection_data originates from the same process that s calling this function because a pointer to the tree model is being passed around. If you aren t in the same process then you ll get memory corruption. In the Gtk.TreeDragDest drag_data_received handler you can assume that selection data of type GTK_TREE_MODEL_ROW is in from the current process. The returned path must be freed with Gtk.TreePath.free. \nParameters \na Gtk.SelectionData \nReturns a tuple made of \nTrue if selection_data had target type GTK_TREE_MODEL_ROW and is otherwise valid \nTrue if selection_data had target type GTK_TREE_MODEL_ROW and is otherwise valid \nTrue if selection_data had target type GTK_TREE_MODEL_ROW and is otherwise valid \nObtains a tree_model and path from selection data of target type GTK_TREE_MODEL_ROW. Normally called from a drag_data_received handler. This function can only be used if selection_data originates from the same process that s calling this function because a pointer to the tree model is being passed around. If you aren t in the same process then you ll get memory corruption. In the Gtk.TreeDragDest drag_data_received handler you can assume that selection data of type GTK_TREE_MODEL_ROW is in from the current process. The returned path must be freed with Gtk.prototype.free. \nParameters \na Gtk.SelectionData \nReturns a tuple made of \ntrue if selection_data had target type GTK_TREE_MODEL_ROW and is otherwise valid \ntrue if selection_data had target type GTK_TREE_MODEL_ROW and is otherwise valid \ntrue if selection_data had target type GTK_TREE_MODEL_ROW and is otherwise valid \n"});