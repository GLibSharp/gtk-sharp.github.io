fragment_downloaded_cb({"url": "gtkmain.html#gtk_init", "fragment": "gtk_init \nprototype.init \nGtk.init \nCall this function before using any other GTK functions in your GUI applications. It will initialize everything needed to operate the toolkit and parses some standard command line options. \nIf you are using GtkApplication you don t have to call gtk_init or gtk_init_check the GtkApplication startup handler does it for you. \nThis function will terminate your program if it was unable to initialize the windowing system for some reason. If you want your program to fall back to a textual interface you want to call gtk_init_check instead. \nSince GTK calls signal SIGPIPE SIG_IGN during initialization to ignore SIGPIPE signals since these are almost never wanted in graphical applications. If you do need to handle SIGPIPE for some reason reset the handler after gtk_init but notice that other libraries e.g. libdbus or gvfs might do similar things. \nCall this function before using any other GTK functions in your GUI applications. It will initialize everything needed to operate the toolkit and parses some standard command line options. \nIf you are using Gtk.Application you don t have to call prototype.init or prototype.init_check the GtkApplication startup handler does it for you. \nThis function will terminate your program if it was unable to initialize the windowing system for some reason. If you want your program to fall back to a textual interface you want to call prototype.init_check instead. \nSince GTK calls signal SIGPIPE SIG_IGN during initialization to ignore SIGPIPE signals since these are almost never wanted in graphical applications. If you do need to handle SIGPIPE for some reason reset the handler after prototype.init but notice that other libraries e.g. libdbus or gvfs might do similar things. \nCall this function before using any other GTK functions in your GUI applications. It will initialize everything needed to operate the toolkit and parses some standard command line options. \nIf you are using Gtk.Application you don t have to call Gtk.init or Gtk.init_check the GtkApplication startup handler does it for you. \nThis function will terminate your program if it was unable to initialize the windowing system for some reason. If you want your program to fall back to a textual interface you want to call Gtk.init_check instead. \nSince GTK calls signal SIGPIPE SIG_IGN during initialization to ignore SIGPIPE signals since these are almost never wanted in graphical applications. If you do need to handle SIGPIPE for some reason reset the handler after Gtk.init but notice that other libraries e.g. libdbus or gvfs might do similar things. \n"});