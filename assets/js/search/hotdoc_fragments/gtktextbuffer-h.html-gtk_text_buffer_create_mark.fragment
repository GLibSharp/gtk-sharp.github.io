fragment_downloaded_cb({"url": "gtktextbuffer-h.html#gtk_text_buffer_create_mark", "fragment": "gtk_text_buffer_create_mark \nGtk.prototype.create_mark \nGtk.TextBuffer.create_mark \nCreates a mark at position where. If mark_name is NULL the mark is anonymous otherwise the mark can be retrieved by name using gtk_text_buffer_get_mark. If a mark has left gravity and text is inserted at the mark s current location the mark will be moved to the left of the newly inserted text. If the mark has right gravity left_gravity FALSE the mark will end up on the right of newly inserted text. The standard left to right cursor is a mark with right gravity when you type the cursor stays on the right side of the text you re typing \nThe caller of this function does not own a reference to the returned GtkTextMark so you can ignore the return value if you like. Marks are owned by the buffer and go away when the buffer does. \nEmits the mark set signal as notification of the mark s initial placement. \nParameters \na GtkTextBuffer \nname for mark or NULL \nlocation to place mark \nwhether the mark has left gravity \nthe new GtkTextMark object \nCreates a mark at position where. If mark_name is null the mark is anonymous otherwise the mark can be retrieved by name using Gtk.prototype.get_mark. If a mark has left gravity and text is inserted at the mark s current location the mark will be moved to the left of the newly inserted text. If the mark has right gravity left_gravity false the mark will end up on the right of newly inserted text. The standard left to right cursor is a mark with right gravity when you type the cursor stays on the right side of the text you re typing \nThe caller of this function does not own a reference to the returned Gtk.TextMark so you can ignore the return value if you like. Marks are owned by the buffer and go away when the buffer does. \nEmits the mark set signal as notification of the mark s initial placement. \nParameters \na Gtk.TextBuffer \nname for mark or null \nlocation to place mark \nwhether the mark has left gravity \nthe new Gtk.TextMark object \nCreates a mark at position where. If mark_name is None the mark is anonymous otherwise the mark can be retrieved by name using Gtk.TextBuffer.get_mark. If a mark has left gravity and text is inserted at the mark s current location the mark will be moved to the left of the newly inserted text. If the mark has right gravity left_gravity False the mark will end up on the right of newly inserted text. The standard left to right cursor is a mark with right gravity when you type the cursor stays on the right side of the text you re typing \nThe caller of this function does not own a reference to the returned Gtk.TextMark so you can ignore the return value if you like. Marks are owned by the buffer and go away when the buffer does. \nEmits the mark set signal as notification of the mark s initial placement. \nParameters \na Gtk.TextBuffer \nname for mark or None \nlocation to place mark \nwhether the mark has left gravity \nthe new Gtk.TextMark object \n"});