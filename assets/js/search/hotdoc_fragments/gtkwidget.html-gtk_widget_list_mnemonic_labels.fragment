fragment_downloaded_cb({"url": "gtkwidget.html#gtk_widget_list_mnemonic_labels", "fragment": "gtk_widget_list_mnemonic_labels \nGtk.prototype.list_mnemonic_labels \nGtk.Widget.list_mnemonic_labels \nReturns a newly allocated list of the widgets normally labels for which this widget is the target of a mnemonic see for example gtk_label_set_mnemonic_widget \nThe widgets in the list are not individually referenced. If you want to iterate through the list and perform actions involving callbacks that might destroy the widgets you must call g_list_foreach result GFunc g_object_ref NULL first and then unref all the widgets afterwards. \nParameters \na GtkWidget \nthe list of mnemonic labels free this list with g_list_free when you are done with it. \nSince \nReturns a newly allocated list of the widgets normally labels for which this widget is the target of a mnemonic see for example Gtk.prototype.set_mnemonic_widget \nThe widgets in the list are not individually referenced. If you want to iterate through the list and perform actions involving callbacks that might destroy the widgets you must call g_list_foreach result GFunc g_object_ref NULL first and then unref all the widgets afterwards. \nParameters \na Gtk.Widget \nthe list of mnemonic labels free this list with g_list_free not introspectable when you are done with it. \nSince \nReturns a newly allocated list of the widgets normally labels for which this widget is the target of a mnemonic see for example Gtk.Label.set_mnemonic_widget \nThe widgets in the list are not individually referenced. If you want to iterate through the list and perform actions involving callbacks that might destroy the widgets you must call g_list_foreach result GFunc g_object_ref NULL first and then unref all the widgets afterwards. \nParameters \na Gtk.Widget \nthe list of mnemonic labels free this list with g_list_free not introspectable when you are done with it. \nSince \n"});