fragment_downloaded_cb({"url": "gtktextbuffer.html#GtkTextBufferDeserializeFunc", "fragment": "GtkTextBufferDeserializeFunc \nGtk.TextBufferDeserializeFunc \nGtk.TextBufferDeserializeFunc \nA function that is called to deserialize rich text that has been serialized with gtk_text_buffer_serialize and insert it at iter. \nParameters \nthe GtkTextBuffer the format is registered with \nthe GtkTextBuffer to deserialize into \ninsertion point for the deserialized text \ndata to deserialize \nlength of data \nTRUE if deserializing may create tags \nuser data that was specified when registering the format \nTRUE on success FALSE otherwise \nA function that is called to deserialize rich text that has been serialized with Gtk.TextBuffer.serialize and insert it at iter. \nParameters \nthe Gtk.TextBuffer the format is registered with \nthe Gtk.TextBuffer to deserialize into \ninsertion point for the deserialized text \ndata to deserialize \nlength of data \nTrue if deserializing may create tags \nuser data that was specified when registering the format \nTrue on success False otherwise \nA function that is called to deserialize rich text that has been serialized with Gtk.prototype.serialize and insert it at iter. \nParameters \nthe Gtk.TextBuffer the format is registered with \nthe Gtk.TextBuffer to deserialize into \ninsertion point for the deserialized text \ndata to deserialize \nlength of data \ntrue if deserializing may create tags \nuser data that was specified when registering the format \ntrue on success false otherwise \n"});