fragment_downloaded_cb({"url": "gtklevelbar.html#page-description", "fragment": "The GtkLevelBar is a bar widget that can be used as a level indicator. Typical use cases are displaying the strength of a password or showing the charge level of a battery. \nUse gtk_level_bar_set_value to set the current value and gtk_level_bar_add_offset_value to set the value offsets at which the bar will be considered in a different state. GTK will add a few offsets by default on the level bar GTK_LEVEL_BAR_OFFSET_LOW GTK_LEVEL_BAR_OFFSET_HIGH and GTK_LEVEL_BAR_OFFSET_FULL with values and respectively. \nNote that it is your responsibility to update preexisting offsets when changing the minimum or maximum value. GTK will simply clamp them to the new range. \nThe default interval of values is between zero and one but it s possible to modify the interval using gtk_level_bar_set_min_value and gtk_level_bar_set_max_value. The value will be always drawn in proportion to the admissible interval i.e. a value of with a specified interval between and is equivalent to a value of with an interval between and When GTK_LEVEL_BAR_MODE_DISCRETE is used the bar level is rendered as a finite number of separated blocks instead of a single one. The number of blocks that will be rendered is equal to the number of units specified by the admissible interval. \nFor instance to build a bar rendered with five blocks it s sufficient to set the minimum value to and the maximum value to after changing the indicator mode to discrete. \nGtkLevelBar was introduced in GTK \nThe GtkLevelBar implementation of the GtkBuildable interface supports a custom element which can contain any number of elements each of which must have name and value attributes. \nGtkLevelBar has a main CSS node with name levelbar and one of the style classes discrete or continuous and a subnode with name trough. Below the trough node are a number of nodes with name block and style class filled or empty. In continuous mode there is exactly one node of each in discrete mode the number of filled and unfilled nodes corresponds to blocks that are drawn. The block.filled nodes also get a style class level name corresponding to the level for the current value. \nIn horizontal orientation the nodes are always arranged from left to right regardless of text direction. \n"});