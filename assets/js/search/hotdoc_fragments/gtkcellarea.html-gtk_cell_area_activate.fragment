fragment_downloaded_cb({"url": "gtkcellarea.html#gtk_cell_area_activate", "fragment": "gtk_cell_area_activate \nGtk.prototype.activate \nGtk.CellArea.activate \nActivates area usually by activating the currently focused cell however some subclasses which embed widgets in the area can also activate a widget if it currently has the focus. \nParameters \na GtkCellArea \nthe GtkCellAreaContext in context with the current row data \nthe GtkWidget that area is rendering on \nthe size and location of area relative to widget s allocation \nthe GtkCellRendererState flags for area for this row of data. \nif TRUE then only cell renderers that are GTK_CELL_RENDERER_MODE_EDITABLE will be activated. \nWhether area was successfully activated. \nSince \nActivates area usually by activating the currently focused cell however some subclasses which embed widgets in the area can also activate a widget if it currently has the focus. \nParameters \na Gtk.CellArea \nthe Gtk.CellAreaContext in context with the current row data \nthe Gtk.Widget that area is rendering on \nthe size and location of area relative to widget s allocation \nthe Gtk.CellRendererState flags for area for this row of data. \nif true then only cell renderers that are Gtk.CellRendererMode.EDITABLE will be activated. \nWhether area was successfully activated. \nSince \nActivates area usually by activating the currently focused cell however some subclasses which embed widgets in the area can also activate a widget if it currently has the focus. \nParameters \na Gtk.CellArea \nthe Gtk.CellAreaContext in context with the current row data \nthe Gtk.Widget that area is rendering on \nthe size and location of area relative to widget s allocation \nthe Gtk.CellRendererState flags for area for this row of data. \nif True then only cell renderers that are Gtk.CellRendererMode.EDITABLE will be activated. \nWhether area was successfully activated. \nSince \n"});