fragment_downloaded_cb({"url": "gtklistbox-h.html#gtk_list_box_row_changed", "fragment": "gtk_list_box_row_changed \nGtk.prototype.changed \nGtk.ListBoxRow.changed \nMarks row as changed causing any state that depends on this to be updated. This affects sorting filtering and headers. \nNote that calls to this method must be in sync with the data used for the row functions. For instance if the list is mirroring some external data set and two rows changed in the external data set then when you call gtk_list_box_row_changed on the first row the sort function must only read the new data for the first of the two changed rows otherwise the resorting of the rows will be wrong. \nThis generally means that if you don t fully control the data model you have to duplicate the data that affects the listbox row functions into the row widgets themselves. Another alternative is to call gtk_list_box_invalidate_sort on any model change but that is more expensive. \nParameters \na GtkListBoxRow \nSince \nMarks row as changed causing any state that depends on this to be updated. This affects sorting filtering and headers. \nNote that calls to this method must be in sync with the data used for the row functions. For instance if the list is mirroring some external data set and two rows changed in the external data set then when you call Gtk.prototype.changed on the first row the sort function must only read the new data for the first of the two changed rows otherwise the resorting of the rows will be wrong. \nThis generally means that if you don t fully control the data model you have to duplicate the data that affects the listbox row functions into the row widgets themselves. Another alternative is to call Gtk.prototype.invalidate_sort on any model change but that is more expensive. \nParameters \na Gtk.ListBoxRow \nSince \nMarks row as changed causing any state that depends on this to be updated. This affects sorting filtering and headers. \nNote that calls to this method must be in sync with the data used for the row functions. For instance if the list is mirroring some external data set and two rows changed in the external data set then when you call Gtk.ListBoxRow.changed on the first row the sort function must only read the new data for the first of the two changed rows otherwise the resorting of the rows will be wrong. \nThis generally means that if you don t fully control the data model you have to duplicate the data that affects the listbox row functions into the row widgets themselves. Another alternative is to call Gtk.ListBox.invalidate_sort on any model change but that is more expensive. \nParameters \na Gtk.ListBoxRow \nSince \n"});