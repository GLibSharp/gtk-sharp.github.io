fragment_downloaded_cb({"url": "gtkwindow-h.html#gtk_window_get_size", "fragment": "Gtk.Window.GetSize \nObtains the current size of window. \nIf window is not visible on screen this function return the size GTK will suggest to the window manager gtk X11 arch for the initial window size but this is not reliably the same as the size the window manager will actually select See Gtk.Window.SetDefaultSize. \nDepending on the windowing system and the window manager constraints the size returned by this function may not match the size set using Gtk.Window.Resize additionally since Gtk.Window.Resize may be implemented as an asynchronous operation GTK cannot guarantee in any way that this code \nwill result in new_width and new_height matching width and height respectively. \nThis function will return the logical size of the Gtk.Window excluding the widgets used in client side decorations there is however no guarantee that the result will be completely accurate because client side decoration may include widgets that depend on the user preferences and that may not be visibile at the time you call this function. \nThe dimensions returned by this function are suitable for being stored across sessions use Gtk.Window.SetDefaultSize to restore them when before showing the window. \nTo avoid potential race conditions you should only call this function in response to a size change notification for instance inside a handler for the SizeAllocate signal or inside a handler for the ConfigureEvent signal \nNote that if you connect to the SizeAllocate signal you should not use the dimensions of the Gtk.Allocation passed to the signal handler as the allocation may contain client side decorations added by GTK depending on the windowing system in use. \nIf you are getting a window size in order to position the window on the screen you should instead simply set the window s semantic type with Gtk.Window.SetTypeHint which allows the window manager to e.g. center dialogs. Also if you set the transient parent of dialogs with Gtk.Window.SetTransientFor window managers will often center the dialog over its parent window. It s much preferred to let the window manager handle these cases rather than doing it yourself because all apps will behave consistently and according to user or system preferences if the window manager handles it. Also the window manager can take into account the size of the window decorations and border that it may add and of which GTK has no knowledge. Additionally positioning windows in global screen coordinates may not be allowed by the windowing system. For more information see Gtk.Window.SetPosition. \nParameters \nreturn location for width or null \nreturn location for height or null \n"});