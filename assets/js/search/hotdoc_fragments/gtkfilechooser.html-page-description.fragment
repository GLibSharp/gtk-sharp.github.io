fragment_downloaded_cb({"url": "gtkfilechooser.html#page-description", "fragment": "GtkFileChooser is an interface that can be implemented by file selection widgets. In GTK the main objects that implement this interface are GtkFileChooserWidget GtkFileChooserDialog and GtkFileChooserButton. You do not need to write an object that implements the GtkFileChooser interface unless you are trying to adapt an existing file selector to expose a standard programming interface. \nGtkFileChooser allows for shortcuts to various places in the filesystem. In the default implementation these are displayed in the left pane. It may be a bit confusing at first that these shortcuts come from various sources and in various flavours so lets explain the terminology here \nBookmarks are created by the user by dragging folders from the right pane to the left pane or by using the Add Bookmarks can be renamed and deleted by the user. \nShortcuts can be provided by the application. For example a Paint program may want to add a shortcut for a Clipart folder. Shortcuts cannot be modified by the user. \nVolumes are provided by the underlying filesystem abstraction. They are the roots of the filesystem. \nWhen the user is finished selecting files in a GtkFileChooser your program can get the selected names either as filenames or as URIs. For URIs the normal escaping rules are applied if the URI contains non ASCII characters. However filenames are always returned in the character set specified by the G_FILENAME_ENCODING environment variable. Please see the GLib documentation for more details about this variable. \nThis means that while you can pass the result of gtk_file_chooser_get_filename to open or fopen you may not be able to directly set it as the text of a GtkLabel widget unless you convert it first to UTF which all GTK widgets expect. You should use g_filename_to_utf8 to convert filenames into strings that can be passed to GTK widgets. \nYou can add a custom preview widget to a file chooser and then get notification about when the preview needs to be updated. To install a preview widget use gtk_file_chooser_set_preview_widget. Then connect to the update preview signal to get notified when you need to update the contents of the preview. \nYour callback should use gtk_file_chooser_get_preview_filename to see what needs previewing. Once you have generated the preview for the corresponding file you must call gtk_file_chooser_set_preview_widget_active with a boolean flag that indicates whether your callback could successfully generate a preview. \nYou can add extra widgets to a file chooser to provide options that are not present in the default design. For example you can add a toggle button to give the user the option to open a file in read only mode. You can use gtk_file_chooser_set_extra_widget to insert additional widgets in a file chooser. \nAn example for adding extra widgets \nIf you want to set more than one extra widget in the file chooser you can a container such as a GtkBox or a GtkGrid and include your widgets in it. Then set the container as the whole extra widget. \n"});