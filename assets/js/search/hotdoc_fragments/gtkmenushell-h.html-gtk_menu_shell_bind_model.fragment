fragment_downloaded_cb({"url": "gtkmenushell-h.html#gtk_menu_shell_bind_model", "fragment": "Gtk.MenuShell.BindModel \nEstablishes a binding between a Gtk.MenuShell and a Gio.MenuModel. \nThe contents of shell are removed and then refilled with menu items according to model. When model changes shell is updated. Calling this function twice on shell with different model will cause the first binding to be replaced with a binding to the new model. If model is null then any previous binding is undone and all children are removed. \nwith_separators determines if toplevel items eg sections have separators inserted between them. This is typically desired for menus but doesn t make sense for menubars. \nIf action_namespace is non NULL then the effect is as if all actions mentioned in the model have their names prefixed with the namespace plus a dot. For example if the action quit is mentioned and action_namespace is app then the effective action name is app.quit \nThis function uses Gtk.IActionable to define the action name and target values on the created menu items. If you want to use an action group other than app and win or if you want to use a Gtk.MenuShell outside of a Gtk.ApplicationWindow then you will need to attach your own action group to the widget hierarchy using Gtk.Widget.InsertActionGroup. As an example if you created a group with a quit action and inserted it with the name mygroup then you would use the action name mygroup.quit in your Gio.MenuModel. \nFor most cases you are probably better off using Gtk.Menu or Gtk.MenuBar or just directly passing the Gio.MenuModel to Gtk.Application.SetAppMenu or Gtk.Application.SetMenubar. \nParameters \nthe Gio.MenuModel to bind to or null to remove binding \nthe namespace for actions in model \ntrue if toplevel items in shell should have separators between them \nSince \n"});