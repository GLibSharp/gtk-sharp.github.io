fragment_downloaded_cb({"url": "gtktreestore.html#gtk_tree_store_insert", "fragment": "gtk_tree_store_insert \nGtk.prototype.insert \nGtk.TreeStore.insert \nCreates a new row at position. If parent is non NULL then the row will be made a child of parent. Otherwise the row will be created at the toplevel. If position is or is larger than the number of rows at that level then the new row will be inserted to the end of the list. iter will be changed to point to this new row. The row will be empty after this function is called. To fill in values you need to call gtk_tree_store_set or gtk_tree_store_set_value. \nParameters \nA GtkTreeStore \nAn unset GtkTreeIter to set to the new row \nA valid GtkTreeIter or NULL \nposition to insert the new row or for last \nCreates a new row at position. If parent is non NULL then the row will be made a child of parent. Otherwise the row will be created at the toplevel. If position is or is larger than the number of rows at that level then the new row will be inserted to the end of the list. iter will be changed to point to this new row. The row will be empty after this function is called. To fill in values you need to call gtk_tree_store_set not introspectable or Gtk.prototype.set_value. \nParameters \nA Gtk.TreeStore \nA valid Gtk.TreeIter or null \nposition to insert the new row or for last \nCreates a new row at position. If parent is non NULL then the row will be made a child of parent. Otherwise the row will be created at the toplevel. If position is or is larger than the number of rows at that level then the new row will be inserted to the end of the list. iter will be changed to point to this new row. The row will be empty after this function is called. To fill in values you need to call gtk_tree_store_set not introspectable or Gtk.TreeStore.set_value. \nParameters \nA Gtk.TreeStore \nA valid Gtk.TreeIter or None \nposition to insert the new row or for last \n"});