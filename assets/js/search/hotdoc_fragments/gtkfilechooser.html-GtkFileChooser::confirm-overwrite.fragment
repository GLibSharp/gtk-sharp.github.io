fragment_downloaded_cb({"url": "gtkfilechooser.html#GtkFileChooser::confirm-overwrite", "fragment": "confirm overwrite \nCustom confirmation gtkfilechooser confirmation \nconfirm overwrite \nCustom confirmation gtkfilechooser confirmation \nconfirm overwrite \nCustom confirmation gtkfilechooser confirmation \nThis signal gets emitted whenever it is appropriate to present a confirmation dialog when the user has selected a file name that already exists. The signal only gets emitted when the file chooser is in Gtk.FileChooserAction.SAVE mode. \nMost applications just need to turn on the do overwrite confirmation property or call the Gtk.prototype.set_do_overwrite_confirmation function and they will automatically get a stock confirmation dialog. Applications which need to customize this behavior should do that and also connect to the confirm overwrite signal. \nA signal handler for this signal must return a Gtk.FileChooserConfirmation value which indicates the action to take. If the handler determines that the user wants to select a different filename it should return Gtk.FileChooserConfirmation.SELECT_AGAIN. If it determines that the user is satisfied with his choice of file name it should return Gtk.FileChooserConfirmation.ACCEPT_FILENAME. On the other hand if it determines that the stock confirmation dialog should be used it should return Gtk.FileChooserConfirmation.CONFIRM. The following example illustrates this. \nParameters \na Gtk.FileChooserConfirmation value that indicates which action to take after emitting the signal. \nFlags Run Last \nSince \nThis signal gets emitted whenever it is appropriate to present a confirmation dialog when the user has selected a file name that already exists. The signal only gets emitted when the file chooser is in Gtk.FileChooserAction.SAVE mode. \nMost applications just need to turn on the do overwrite confirmation property or call the Gtk.FileChooser.set_do_overwrite_confirmation function and they will automatically get a stock confirmation dialog. Applications which need to customize this behavior should do that and also connect to the confirm overwrite signal. \nA signal handler for this signal must return a Gtk.FileChooserConfirmation value which indicates the action to take. If the handler determines that the user wants to select a different filename it should return Gtk.FileChooserConfirmation.SELECT_AGAIN. If it determines that the user is satisfied with his choice of file name it should return Gtk.FileChooserConfirmation.ACCEPT_FILENAME. On the other hand if it determines that the stock confirmation dialog should be used it should return Gtk.FileChooserConfirmation.CONFIRM. The following example illustrates this. \nParameters \na Gtk.FileChooserConfirmation value that indicates which action to take after emitting the signal. \nFlags Run Last \nSince \nThis signal gets emitted whenever it is appropriate to present a confirmation dialog when the user has selected a file name that already exists. The signal only gets emitted when the file chooser is in GTK_FILE_CHOOSER_ACTION_SAVE mode. \nMost applications just need to turn on the do overwrite confirmation property or call the gtk_file_chooser_set_do_overwrite_confirmation function and they will automatically get a stock confirmation dialog. Applications which need to customize this behavior should do that and also connect to the confirm overwrite signal. \nA signal handler for this signal must return a GtkFileChooserConfirmation value which indicates the action to take. If the handler determines that the user wants to select a different filename it should return GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN. If it determines that the user is satisfied with his choice of file name it should return GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME. On the other hand if it determines that the stock confirmation dialog should be used it should return GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM. The following example illustrates this. \nParameters \na GtkFileChooserConfirmation value that indicates which action to take after emitting the signal. \nFlags Run Last \nSince \n"});