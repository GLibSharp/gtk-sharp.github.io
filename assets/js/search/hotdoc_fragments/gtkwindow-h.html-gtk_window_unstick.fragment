fragment_downloaded_cb({"url": "gtkwindow-h.html#gtk_window_unstick", "fragment": "gtk_window_unstick \nGtk.prototype.unstick \nGtk.Window.unstick \nAsks to unstick window which means that it will appear on only one of the user s desktops. Note that you shouldn t assume the window is definitely unstuck afterward because other entities e.g. the user or window manager gtk X11 arch could stick it again. But normally the window will end up stuck. Just don t write code that crashes if not. \nYou can track stickiness via the window state event signal on GtkWidget. \nParameters \na GtkWindow \nAsks to unstick window which means that it will appear on only one of the user s desktops. Note that you shouldn t assume the window is definitely unstuck afterward because other entities e.g. the user or window manager gtk X11 arch could stick it again. But normally the window will end up stuck. Just don t write code that crashes if not. \nYou can track stickiness via the window state event signal on Gtk.Widget. \nParameters \na Gtk.Window \nAsks to unstick window which means that it will appear on only one of the user s desktops. Note that you shouldn t assume the window is definitely unstuck afterward because other entities e.g. the user or window manager gtk X11 arch could stick it again. But normally the window will end up stuck. Just don t write code that crashes if not. \nYou can track stickiness via the window state event signal on Gtk.Widget. \nParameters \na Gtk.Window \n"});