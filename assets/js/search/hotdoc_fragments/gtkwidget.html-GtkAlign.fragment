fragment_downloaded_cb({"url": "gtkwidget.html#GtkAlign", "fragment": "GtkAlign \nMembers \nGtk.Align \nMembers \nGtk.Align \nMembers \nControls how a widget deals with extra space in a single x or y dimension. \nAlignment only matters if the widget receives a too large allocation for example if you packed the widget with the expand flag inside a GtkBox then the widget might get extra space. If you have for example a x16 icon inside a x32 space the icon could be scaled and stretched it could be centered or it could be positioned to one side of the space. \nNote that in horizontal context GTK_ALIGN_START and GTK_ALIGN_END are interpreted relative to text direction. \nGTK_ALIGN_BASELINE support for it is optional for containers and widgets and it is only supported for vertical alignment. When its not supported by a child or a container it is treated as GTK_ALIGN_FILL. \nControls how a widget deals with extra space in a single x or y dimension. \nAlignment only matters if the widget receives a too large allocation for example if you packed the widget with the expand flag inside a Gtk.Box then the widget might get extra space. If you have for example a x16 icon inside a x32 space the icon could be scaled and stretched it could be centered or it could be positioned to one side of the space. \nNote that in horizontal context GTK_ALIGN_START and GTK_ALIGN_END are interpreted relative to text direction. \nGTK_ALIGN_BASELINE support for it is optional for containers and widgets and it is only supported for vertical alignment. When its not supported by a child or a container it is treated as GTK_ALIGN_FILL. \nControls how a widget deals with extra space in a single x or y dimension. \nAlignment only matters if the widget receives a too large allocation for example if you packed the widget with the expand flag inside a Gtk.Box then the widget might get extra space. If you have for example a x16 icon inside a x32 space the icon could be scaled and stretched it could be centered or it could be positioned to one side of the space. \nNote that in horizontal context GTK_ALIGN_START and GTK_ALIGN_END are interpreted relative to text direction. \nGTK_ALIGN_BASELINE support for it is optional for containers and widgets and it is only supported for vertical alignment. When its not supported by a child or a container it is treated as GTK_ALIGN_FILL. \n"});